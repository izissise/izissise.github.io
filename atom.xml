<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet href="/atom-style.xsl" type="text/xsl"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><title>Hugues Blog</title><link rel="self" type="application/atom+xml" href="/atom.xml"/><link rel="alternate" type="text/html" href="/"/><updated>3025-06-09T00:00:00+00:00</updated><id>/atom.xml</id><entry xml:lang="en"><title>Raconn - Ssh multi hostname</title><published>2025-10-24T00:00:00+00:00</published><updated>2025-10-24T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/raconn/"/><id>/posts/raconn/</id><content type="html" xml:base="/posts/raconn/">&lt;p&gt;TLDR: &lt;a href="/posts/raconn/#raconn"&gt;Raconn&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="introduction"&gt;&lt;a class="zola-anchor" href="#introduction" aria-label="Anchor link for: introduction"&gt;Introduction&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Recently I wanted to connect to a local machine with ssh but didn't know it's IP, I knew the MAC address which I could translate into the IPv6 link-local address but since the &lt;code&gt;connect&lt;/code&gt; syscall requires the local iface name for ip6 link local, it would need to be hardcoded in the ssh config, making it inconvenient to change. Also if the same machine is accessible from a wider network, I'd need a second entry in the config and have to remember which one to use depending on which network my computer is connected to.&lt;/p&gt;
&lt;p&gt;That’s a lot of complexity and I thought most of it could be solved if ssh config allowed multiple hostnames for a single host entry.&lt;/p&gt;
&lt;p&gt;Unfortunately, &lt;code&gt;OpenSSH&lt;/code&gt;'s &lt;code&gt;Hostname&lt;/code&gt; directive doesn't support multiple entries:&lt;/p&gt;
&lt;pre class="z-code"&gt;&lt;code&gt;&lt;span class="z-text z-plain"&gt;Host machineA
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Hostname machinea.local 192.168.1.65 2a00:1450:4007:81a::200e 142.250.201.174 00:00:07:00:00:00 ...
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Port 22
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; User admin
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; PubkeyAuthentication yes
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IdentityFile ~/.ssh/id_rsa
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But there’s a silver lining &lt;code&gt;ProxyCommand&lt;/code&gt;. It runs a program that’s expected to connect to the remote machine, &lt;code&gt;OpenSSH&lt;/code&gt; will simply speaks its protocol through the program's &lt;code&gt;stdin&lt;/code&gt; and &lt;code&gt;stdout&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;Which means I can do the following:&lt;/p&gt;
&lt;pre data-name="~/.ssh/config" class="z-code"&gt;&lt;code data-name="~/.ssh/config"&gt;&lt;span class="z-text z-plain"&gt;Host machineA
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; ProxyCommand program %p machine.company.net 192.168.1.65 2a00:1450:4007:81a::200e 142.250.201.174 00:00:07:00:00:00 ...
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Port 22
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; User admin
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; PubkeyAuthentication yes
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IdentityFile ~/.ssh/id_rsa
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I just need to figure out what &lt;code&gt;program&lt;/code&gt; is.&lt;/p&gt;
&lt;h1 id="socat"&gt;&lt;a class="zola-anchor" href="#socat" aria-label="Anchor link for: socat"&gt;Socat&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;It seems like a shell script using &lt;code&gt;socat&lt;/code&gt; would be perfect for the job, I was able to get a serialized version working, but since it tried every hostname one after another, it could take a long time to connect, especially if only the last one on the command line was reachable.&lt;/p&gt;
&lt;p&gt;The main issue I had was that socat executes the script defined on the &lt;code&gt;exec&lt;/code&gt; statement before the connection is successfully established making it hard to know which socat instance is connected when spawning multiple ones in parallel.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener" target="_blank" href="https://web.archive.org/web/20250318111137/https://stackoverflow.com/questions/79497821/how-to-execute-a-script-only-after-a-successful-tcp-connection-with-socat"&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the end, I decided to write this program myself.&lt;/p&gt;
&lt;h1 id="raconn"&gt;&lt;a class="zola-anchor" href="#raconn" aria-label="Anchor link for: raconn"&gt;Raconn&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Enter &lt;code&gt;raconn&lt;/code&gt; (short for RAce CONNect) is a utility that accepts a list of hostnames and IP addresses as arguments. It attempts to connect to all of them in parallel using separate threads and retains the first successful connection cancelling all the remaining threads. Once connected, it proxies data between stdin and stdout, making it suitable for use as an SSH ProxyCommand.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener" target="_blank" href="https://github.com/izissise/raconn"&gt;Git repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is written in C using &lt;a rel="noopener" target="_blank" href="https://github.com/jart/cosmopolitan"&gt;cosmopolitan libc&lt;/a&gt;, Some reasons for this choice:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Runs on all major operating systems with a unique static binary&lt;/li&gt;
&lt;li&gt;Easy 'C' development thanks to sane api defaults&lt;/li&gt;
&lt;li&gt;Debug enviroment included&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also I'm addicted to sugar so I added &lt;a rel="noopener" target="_blank" href="https://github.com/aartaka/pretty.c"&gt;pretty.c&lt;/a&gt; in the mix.&lt;/p&gt;
&lt;h1 id="examples"&gt;&lt;a class="zola-anchor" href="#examples" aria-label="Anchor link for: examples"&gt;Examples&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote class="example"&gt;
&lt;p class="box-title"&gt;
&lt;i class="icon"&gt;&lt;/i&gt;example&lt;/p&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;p&gt;Let’s say you have a server with two ifaces, one used for failover,
if you specify both ip to raconn, even in a failover
situation, your ssh command will succeed by connecting
through the second iface and ip. &lt;code&gt;$ ssh ip4failover&lt;/code&gt;&lt;/p&gt;
&lt;pre data-name="~/.ssh/config" class="z-code"&gt;&lt;code data-name="~/.ssh/config"&gt;&lt;span class="z-text z-plain"&gt;Host ip4failover
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; ProxyCommand raconn %p 233.252.3.1 233.252.4.1
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Port 22
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; User admin
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;blockquote class="example"&gt;
&lt;p class="box-title"&gt;
&lt;i class="icon"&gt;&lt;/i&gt;example&lt;/p&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;p&gt;You have a machine that is accessible on your local network
and from outside. You only known the machine MAC address and
its name which resolve to a WAN ip.
Locally your are connected through both wifi and ethernet.
&lt;code&gt;$ ssh machine&lt;/code&gt;&lt;/p&gt;
&lt;pre data-name="~/.ssh/config" class="z-code"&gt;&lt;code data-name="~/.ssh/config"&gt;&lt;span class="z-text z-plain"&gt;Host machine.company
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; ProxyCommand raconn %p machine.company.net 00:00:07:cf:10:0a
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Port 22
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; User admin
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;blockquote class="example"&gt;
&lt;p class="box-title"&gt;
&lt;i class="icon"&gt;&lt;/i&gt;example&lt;/p&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;p&gt;You're trying to figuring out something and &lt;code&gt;raconn&lt;/code&gt; is
getting in the way. &lt;code&gt;$ ssh -oProxyCommand=none machine.company.net&lt;/code&gt;&lt;/p&gt;
&lt;pre data-name="~/.ssh/config" class="z-code"&gt;&lt;code data-name="~/.ssh/config"&gt;&lt;span class="z-text z-plain"&gt;Host machine.company.net
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; ProxyCommand raconn %p 2a00:1450:4007:81a::200e fe80::9e4f:642a:15c2:aad7
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Port 22
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; User admin
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;h1 id="how-is-it-made"&gt;&lt;a class="zola-anchor" href="#how-is-it-made" aria-label="Anchor link for: how-is-it-made"&gt;How is it made?&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="writing-c-and-dev-environment-setup"&gt;&lt;a class="zola-anchor" href="#writing-c-and-dev-environment-setup" aria-label="Anchor link for: writing-c-and-dev-environment-setup"&gt;Writing C and dev environment setup&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="git"&gt;&lt;a class="zola-anchor" href="#git" aria-label="Anchor link for: git"&gt;Git&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Raconn&lt;/code&gt; is a small project and it only needs only a few versioned files.
For the first time I tried using &lt;code&gt;.gitignore&lt;/code&gt; as an allowlist:&lt;/p&gt;
&lt;pre data-lang=".gitignore" class="language-.gitignore z-code"&gt;&lt;code class="language-.gitignore" data-lang=".gitignore"&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-comment z-genconfig"&gt;&lt;span class="z-comment z-line z-number-sign z-genconfig"&gt;# ignore everything
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-comment z-genconfig"&gt;&lt;span class="z-comment z-line z-number-sign z-genconfig"&gt;# except for these
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;!&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;/&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;.&lt;/span&gt;gitignore
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;!&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;/&lt;/span&gt;main&lt;span class="z-keyword z-operator z-genconfig"&gt;.&lt;/span&gt;c
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;!&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;/&lt;/span&gt;Makefile
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;!&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;/&lt;/span&gt;&lt;span class="z-support z-constant z-genconfig"&gt;README&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;.&lt;/span&gt;md
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;!&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;/&lt;/span&gt;&lt;span class="z-support z-constant z-genconfig"&gt;LICENSE&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This has the nice property that no new files or artifacts can be tracked by mistake, and &lt;code&gt;git status&lt;/code&gt; always stays clean.&lt;/p&gt;
&lt;h3 id="makefile"&gt;&lt;a class="zola-anchor" href="#makefile" aria-label="Anchor link for: makefile"&gt;Makefile&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For easy build and QA, I use a &lt;code&gt;Makefile&lt;/code&gt; with targets for build, format and lint.&lt;/p&gt;
&lt;p&gt;It will also downloads the &lt;code&gt;cosmopolitan&lt;/code&gt; toolchain and sets up the &lt;a rel="noopener" target="_blank" href="https://en.wikipedia.org/wiki/Language_Server_Protocol"&gt;LSP&lt;/a&gt; support to get errors and warnings directly in &lt;a rel="noopener" target="_blank" href="https://kate-editor.org/"&gt;kate&lt;/a&gt;
my source editor of choice.&lt;/p&gt;
&lt;p&gt;After &lt;a rel="noopener" target="_blank" href="https://github.com/clangd/clangd/issues/1038#issuecomment-2614169354"&gt;some research&lt;/a&gt;, I found that I needed to create two files for &lt;code&gt;clangd&lt;/code&gt; LSP to correctly support &lt;code&gt;cosmopolitan&lt;/code&gt;:&lt;/p&gt;
&lt;pre data-lang="json" data-name="compile_commands.json" class="language-json z-code"&gt;&lt;code class="language-json" data-lang="json" data-name="compile_commands.json"&gt;&lt;span class="z-source z-json"&gt;&lt;span class="z-meta z-sequence z-json"&gt;&lt;span class="z-punctuation z-section z-sequence z-begin z-json"&gt;[&lt;/span&gt;&lt;span class="z-punctuation z-section z-sequence z-end z-json"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;pre data-lang="yaml" data-name=".clangd" class="language-yaml z-code"&gt;&lt;code class="language-yaml" data-lang="yaml" data-name=".clangd"&gt;&lt;span class="z-source z-yaml"&gt;&lt;span class="z-string z-unquoted z-plain z-out z-yaml"&gt;&lt;span class="z-entity z-name z-tag z-yaml"&gt;CompileFlags&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-separator z-key-value z-mapping z-yaml"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-yaml"&gt; &lt;span class="z-string z-unquoted z-plain z-out z-yaml"&gt;&lt;span class="z-entity z-name z-tag z-yaml"&gt;Add&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-separator z-key-value z-mapping z-yaml"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-yaml"&gt; &lt;span class="z-punctuation z-definition z-block z-sequence z-item z-yaml"&gt;-&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-yaml"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-yaml"&gt;&amp;quot;&lt;/span&gt;-isystemcosmocc/include&lt;span class="z-punctuation z-definition z-string z-end z-yaml"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-yaml"&gt; &lt;span class="z-punctuation z-definition z-block z-sequence z-item z-yaml"&gt;-&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-yaml"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-yaml"&gt;&amp;quot;&lt;/span&gt;-include libc/c.inc&lt;span class="z-punctuation z-definition z-string z-end z-yaml"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="principle"&gt;&lt;a class="zola-anchor" href="#principle" aria-label="Anchor link for: principle"&gt;Principle&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;raconn&lt;/code&gt; tries to connect in parallel to all addresses provided on the command line. The first successful connection cancels the others and is then piped through stdin/stdout, making it suitable for use as an ssh &lt;code&gt;ProxyCommand&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The first step is to resolve each hostname into a list of IPv4 or IPv6 addresses to feed into the &lt;code&gt;connect&lt;/code&gt; syscall.&lt;/p&gt;
&lt;h3 id="ipv6-local-link"&gt;&lt;a class="zola-anchor" href="#ipv6-local-link" aria-label="Anchor link for: ipv6-local-link"&gt;Ipv6 local link&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Some notes on IPv6 link local addresses,&lt;/p&gt;
&lt;p&gt;IpV6 has a set of special addresses called link local in the range &lt;code&gt;fe80::/10&lt;/code&gt;.
All network interface must be assigned one if it wants to use Ipv6.
These addresses are not routed by routers and allow for ipv6 devices to talk to each other
without a router on the same link.&lt;/p&gt;
&lt;p&gt;Because ip6 link local addresses are usually derived from the network interface's mac address, that makes them
predictable and so it would be nice to be able to use them to connect to the remote machine.&lt;/p&gt;
&lt;p&gt;The problem is that, unlike IPv4 and global IPv6 addresses (where only the destination address is needed), link local addresses require specifying the interface index in &lt;code&gt;struct sockaddr_in6&lt;/code&gt; when using &lt;code&gt;connect&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Since I don’t want to ask the user which network interface shares a link with the remote machine, I simply perform a &lt;code&gt;connect&lt;/code&gt; syscall for every network interface on the local machine.&lt;/p&gt;
&lt;p&gt;So a list of locally attached network interfaces is needed, but as of 2025 &lt;code&gt;getifaddrs&lt;/code&gt; in cosmopolitan is
only implemented for IPv4.&lt;/p&gt;
&lt;p&gt;That became a whole side quest, implemented across 3 PRs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel="noopener" target="_blank" href="https://github.com/jart/cosmopolitan/pull/1415"&gt;getifaddrs Linux (merged)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel="noopener" target="_blank" href="https://github.com/jart/cosmopolitan/pull/1436"&gt;getifaddrs BSD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel="noopener" target="_blank" href="https://github.com/jart/cosmopolitan/pull/1433"&gt;getifaddrs Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="dns-resolution"&gt;&lt;a class="zola-anchor" href="#dns-resolution" aria-label="Anchor link for: dns-resolution"&gt;DNS resolution&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In cosmopolitan, hostname lookup using &lt;code&gt;getaddrinfo&lt;/code&gt; is the courtesy of the musl libc implementation.
As of 2025, it doesn't support &lt;code&gt;mDns&lt;/code&gt; :/&lt;/p&gt;
&lt;p&gt;&lt;code&gt;getaddrinfo&lt;/code&gt; returns a linked list of &lt;code&gt;struct addrinfo&lt;/code&gt; which are the ips 4 and 6 the name resolve to.&lt;/p&gt;
&lt;p&gt;If it returns an Ipv6 link-local address we have to enter the special case described earlier.&lt;/p&gt;
&lt;h3 id="parallel-connections"&gt;&lt;a class="zola-anchor" href="#parallel-connections" aria-label="Anchor link for: parallel-connections"&gt;Parallel connections&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Because &lt;code&gt;getaddrinfo&lt;/code&gt; &lt;code&gt;getaddrlist&lt;/code&gt; &lt;code&gt;connect&lt;/code&gt; etc are blocking calls, I spawn one thread
per arguments on the command line each with a small stack size (see cosmo's greenbean).&lt;/p&gt;
&lt;p&gt;This way all names are tried simultaneously, making the connections truly racy.&lt;/p&gt;
&lt;h3 id="io-fun"&gt;&lt;a class="zola-anchor" href="#io-fun" aria-label="Anchor link for: io-fun"&gt;IO fun&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To ensure only one connection is kept, I use an atomic variable that is only set once.&lt;/p&gt;
&lt;p&gt;The winning connection then spawns two final threads that that effectively pipe the socket through stdin/stdout.&lt;/p&gt;
&lt;h3 id="timeout"&gt;&lt;a class="zola-anchor" href="#timeout" aria-label="Anchor link for: timeout"&gt;Timeout&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Since &lt;code&gt;raconn&lt;/code&gt; will mostly be used in interactive contexts, I want it to fail fast when no hostname is reachable.
Unfortunately, Posix's &lt;code&gt;connect&lt;/code&gt; doesn't give any easy way to choose a timeout after which the connect should fail.&lt;/p&gt;
&lt;p&gt;So, I spawn a sibling thread before calling &lt;code&gt;connect&lt;/code&gt; and &lt;code&gt;getaddrinfo&lt;/code&gt; that will &lt;code&gt;pthread_cancel&lt;/code&gt; on the connecting thread
after a timeout. If &lt;code&gt;connect&lt;/code&gt; succeeds first, it cancels the timeout thread instead.&lt;/p&gt;
&lt;h1 id="closing-words"&gt;&lt;a class="zola-anchor" href="#closing-words" aria-label="Anchor link for: closing-words"&gt;Closing words&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;You can find &lt;code&gt;raconn&lt;/code&gt; &lt;a rel="noopener" target="_blank" href="https://github.com/izissise/raconn"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Computer addressing is a bit of a mess, but at least it’s possible to abstract some of it once you understand its quirks.&lt;/p&gt;</content></entry><entry xml:lang="en"><title>Nginx Explorer - Upload</title><published>2025-03-01T00:00:00+00:00</published><updated>2025-03-01T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/ngxp-upload/"/><id>/posts/ngxp-upload/</id><content type="html" xml:base="/posts/ngxp-upload/">&lt;p&gt;After &lt;a href="/posts/ngxp-listing"&gt;listing files&lt;/a&gt; and setting up per &lt;a href="/posts/ngxp-cookie-auth"&gt;directory accesses&lt;/a&gt;,
we would like to allow some users to upload files.&lt;/p&gt;
&lt;p&gt;This solution is very hacky, but it has the advantage of requiring only a standard nginx server and a bit of javaScript.&lt;/p&gt;
&lt;h1 id="nginx-configuration"&gt;&lt;a class="zola-anchor" href="#nginx-configuration" aria-label="Anchor link for: nginx-configuration"&gt;Nginx Configuration&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;First, we define our upload endpoint:&lt;/p&gt;
&lt;pre data-lang="nginx" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx"&gt;&lt;span class="z-source z-nginx"&gt;...
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-storage z-type z-context z-nginx"&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-meta z-context z-location z-nginx"&gt;&lt;span class="z-storage z-type z-context z-location z-nginx"&gt;location&lt;/span&gt; ^~ &lt;span class="z-string z-regexp z-nginx"&gt;/___ngxp/upload/ &lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;limit_except&lt;/span&gt; GET POST { deny&lt;span class="z-constant z-language z-nginx"&gt; all&lt;/span&gt;;&lt;/span&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-keyword z-control z-nginx"&gt;if&lt;/span&gt; (&lt;span class="z-variable z-other z-nginx"&gt;$user_authorized&lt;/span&gt; = 0) &lt;span class="z-meta z-block z-nginx"&gt;{ &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-support z-function z-module z-http z-rewrite z-nginx"&gt;return&lt;/span&gt; &lt;span class="z-string z-ipaddress z-nginx"&gt;401&lt;/span&gt;;&lt;/span&gt; }&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign"&gt;# auth works here aswell&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;client_body_temp_path&lt;/span&gt; /home/user/uploads/;&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign"&gt;# upload path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;client_body_in_file_only&lt;/span&gt; &lt;span class="z-constant z-language z-nginx"&gt; on&lt;/span&gt;;&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign"&gt;# store on disk&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;client_body_buffer_size&lt;/span&gt; &lt;span class="z-constant z-numeric z-nginx"&gt;16m&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;client_max_body_size&lt;/span&gt; &lt;span class="z-constant z-numeric z-nginx"&gt;256m&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;client_body_timeout&lt;/span&gt; &lt;span class="z-constant z-numeric z-nginx"&gt;2h&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-proxy z-nginx"&gt;proxy_set_body&lt;/span&gt; &lt;span class="z-constant z-language z-nginx"&gt; off&lt;/span&gt;;&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign"&gt;# do not send file to proxy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-proxy z-nginx"&gt;proxy_set_header&lt;/span&gt; X-fileno &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;&lt;span class="z-variable z-other z-nginx"&gt;$upload_fileno&lt;/span&gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign"&gt;# send it back to client&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-proxy z-nginx"&gt;proxy_pass&lt;/span&gt; http://[::1]:4000/&lt;span class="z-variable z-other z-nginx"&gt;$request_method&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;}
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt;&lt;span class="z-storage z-type z-context z-nginx"&gt;map&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$request_body_file&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$upload_fileno&lt;/span&gt; { &lt;span class="z-comment z-line z-number-sign"&gt;# upload filename path part&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt; &lt;span class="z-string z-regexp z-nginx"&gt;~&lt;/span&gt;([&lt;span class="z-string z-regexp z-nginx"&gt;^\/]*)$&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$1&lt;/span&gt;&lt;span class="z-punctuation z-definition z-map z-nginx"&gt;;&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign"&gt;# set $upload_fileno to request filename&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt; &lt;span class="z-constant z-language z-nginx"&gt; default&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-map z-nginx"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a rel="noopener" target="_blank" href="https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_temp_path"&gt;&lt;code&gt;client_body_temp_path&lt;/code&gt;&lt;/a&gt; will store request bodies at the specified path on the file system.
However, &lt;code&gt;nginx&lt;/code&gt; will actually do so only if there is a &lt;a rel="noopener" target="_blank" href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass"&gt;&lt;code&gt;proxy_pass&lt;/code&gt;&lt;/a&gt; defined.&lt;/p&gt;
&lt;p&gt;To work around this, we define another server that listens only on localhost. With &lt;code&gt;proxy_set_body off;&lt;/code&gt;, the body will not actually be sent to the proxy.&lt;/p&gt;
&lt;pre data-lang="nginx" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx"&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-storage z-type z-context z-nginx"&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;listen&lt;/span&gt; [::1]:4000;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-meta z-context z-location z-nginx"&gt;&lt;span class="z-storage z-type z-context z-location z-nginx"&gt;location&lt;/span&gt; &lt;span class="z-entity z-name z-context z-location z-nginx"&gt;/POST &lt;/span&gt;{ &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-support z-function z-module z-http z-rewrite z-nginx"&gt;return&lt;/span&gt; &lt;span class="z-string z-ipaddress z-nginx"&gt;201&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;&lt;span class="z-variable z-other z-nginx"&gt;$http_x_fileno&lt;/span&gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-meta z-context z-location z-nginx"&gt;&lt;span class="z-storage z-type z-context z-location z-nginx"&gt;location&lt;/span&gt; &lt;span class="z-entity z-name z-context z-location z-nginx"&gt;/GET &lt;/span&gt;{ &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-support z-function z-module z-http z-rewrite z-nginx"&gt;return&lt;/span&gt; &lt;span class="z-string z-ipaddress z-nginx"&gt;200&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;ngxp upload&amp;quot;&lt;/span&gt;;&lt;/span&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nginx will create an ever incrementing numbered file for every request body, the increment is non predictable thanks to nginx true randomness&lt;sup class="footnote-reference" id="fr-1-1"&gt;&lt;a href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;h1 id="javascript-code"&gt;&lt;a class="zola-anchor" href="#javascript-code" aria-label="Anchor link for: javascript-code"&gt;Javascript code&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;To upload files larger than &lt;code&gt;client_max_body_size&lt;/code&gt; and preserve the original filename for the administrator, we'll have to write some client side code.&lt;/p&gt;
&lt;p&gt;Using javascript, we can &lt;a rel="noopener" target="_blank" href="https://github.com/izissise/nginx-explorer/blob/d9eb425e0ff3591105724eeba882c576a049d0dc/main.js#L644-L686"&gt;upload a file with an XHR request&lt;/a&gt;, and split the file into chunks. Conveniently, browser &lt;code&gt;File&lt;/code&gt; objects have a &lt;a rel="noopener" target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice"&gt;slice&lt;/a&gt; function.&lt;/p&gt;
&lt;p&gt;We also send a meta file to allow the server operator to reconstruct the file from its chunks. This file includes metadata such as a magic header, chunk size, chunk count, the size of the last chunk and the filename of each chunk on the server as sent back by nginx (X-fileno).&lt;/p&gt;
&lt;pre data-lang="js" class="language-js z-code"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-comment z-line z-double-slash z-ts"&gt;&lt;span class="z-punctuation z-definition z-comment z-ts"&gt;//&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-double-slash z-ts"&gt; files is [File]&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-function-call z-ts"&gt;&lt;span class="z-support z-class z-builtin z-ts"&gt;Array&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-entity z-name z-function z-ts"&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;files&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt;&lt;span class="z-meta z-function-call z-ts"&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-function z-dom z-ts"&gt;forEach&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-parameters z-ts"&gt;&lt;span class="z-punctuation z-definition z-parameters z-begin z-ts"&gt;(&lt;/span&gt;&lt;span class="z-variable z-parameter z-ts"&gt;f&lt;/span&gt;&lt;span class="z-punctuation z-definition z-parameters z-end z-ts"&gt;)&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-storage z-type z-function z-arrow z-ts"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-punctuation z-definition z-block z-ts"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-meta z-var z-expr z-ts"&gt;&lt;span class="z-storage z-type z-ts"&gt;var&lt;/span&gt; &lt;span class="z-meta z-var-single-variable z-expr z-ts"&gt;&lt;span class="z-meta z-definition z-variable z-ts"&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_cnt&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-ts"&gt;=&lt;/span&gt; &lt;span class="z-constant z-numeric z-decimal z-ts"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-meta z-var z-expr z-ts"&gt;&lt;span class="z-storage z-type z-ts"&gt;var&lt;/span&gt; &lt;span class="z-meta z-var-single-variable z-expr z-ts"&gt;&lt;span class="z-meta z-definition z-variable z-ts"&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_size&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-ts"&gt;=&lt;/span&gt; &lt;span class="z-variable z-other z-object z-ts"&gt;f&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-variable z-property z-dom z-ts"&gt;size&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-meta z-var z-expr z-ts"&gt;&lt;span class="z-storage z-type z-ts"&gt;var&lt;/span&gt; &lt;span class="z-meta z-var-single-variable z-expr z-ts"&gt;&lt;span class="z-meta z-definition z-variable z-ts"&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_last_size&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-ts"&gt;=&lt;/span&gt; &lt;span class="z-constant z-numeric z-decimal z-ts"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-keyword z-control z-conditional z-ts"&gt;if&lt;/span&gt; &lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;upload_max_size&lt;/span&gt; &lt;span class="z-keyword z-operator z-relational z-ts"&gt;&amp;gt;&lt;/span&gt; &lt;span class="z-constant z-numeric z-decimal z-ts"&gt;0&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-ts"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="z-variable z-other z-object z-ts"&gt;f&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-variable z-property z-dom z-ts"&gt;size&lt;/span&gt; &lt;span class="z-keyword z-operator z-relational z-ts"&gt;&amp;gt;&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;upload_max_size&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt; &lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-punctuation z-definition z-block z-ts"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-punctuation z-whitespace z-comment z-leading z-ts"&gt; &lt;/span&gt;&lt;span class="z-comment z-line z-double-slash z-ts"&gt;&lt;span class="z-punctuation z-definition z-comment z-ts"&gt;//&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-double-slash z-ts"&gt; upload in chunks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_cnt&lt;/span&gt; &lt;span class="z-keyword z-operator z-assignment z-ts"&gt;=&lt;/span&gt; &lt;span class="z-variable z-other z-object z-ts"&gt;f&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-variable z-property z-dom z-ts"&gt;size&lt;/span&gt; &lt;span class="z-keyword z-operator z-arithmetic z-ts"&gt;/&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;upload_max_size&lt;/span&gt; &lt;span class="z-keyword z-operator z-bitwise z-ts"&gt;|&lt;/span&gt; &lt;span class="z-constant z-numeric z-decimal z-ts"&gt;0&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_size&lt;/span&gt; &lt;span class="z-keyword z-operator z-assignment z-ts"&gt;=&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;upload_max_size&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_last_size&lt;/span&gt; &lt;span class="z-keyword z-operator z-assignment z-ts"&gt;=&lt;/span&gt; &lt;span class="z-variable z-other z-object z-ts"&gt;f&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-variable z-property z-dom z-ts"&gt;size&lt;/span&gt; &lt;span class="z-keyword z-operator z-arithmetic z-ts"&gt;%&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;upload_max_size&lt;/span&gt; &lt;span class="z-keyword z-operator z-bitwise z-ts"&gt;|&lt;/span&gt; &lt;span class="z-constant z-numeric z-decimal z-ts"&gt;0&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-keyword z-control z-conditional z-ts"&gt;if&lt;/span&gt; &lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_last_size&lt;/span&gt; &lt;span class="z-keyword z-operator z-relational z-ts"&gt;&amp;gt;&lt;/span&gt; &lt;span class="z-constant z-numeric z-decimal z-ts"&gt;0&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt; &lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-punctuation z-definition z-block z-ts"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_cnt&lt;/span&gt; &lt;span class="z-keyword z-operator z-assignment z-compound z-ts"&gt;+=&lt;/span&gt; &lt;span class="z-constant z-numeric z-decimal z-ts"&gt;1&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-punctuation z-definition z-block z-ts"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-punctuation z-definition z-block z-ts"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-meta z-var z-expr z-ts"&gt;&lt;span class="z-storage z-type z-ts"&gt;var&lt;/span&gt; &lt;span class="z-meta z-var-single-variable z-expr z-ts"&gt;&lt;span class="z-meta z-definition z-variable z-ts"&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;promise_chain&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-ts"&gt;=&lt;/span&gt; &lt;span class="z-meta z-function-call z-ts"&gt;&lt;span class="z-support z-class z-promise z-ts"&gt;Promise&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-function z-promise z-ts"&gt;resolve&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-meta z-array z-literal z-ts"&gt;&lt;span class="z-meta z-brace z-square z-ts"&gt;[&lt;/span&gt;&lt;span class="z-constant z-language z-null z-ts"&gt;null&lt;/span&gt;&lt;span class="z-punctuation z-separator z-comma z-ts"&gt;,&lt;/span&gt;&lt;span class="z-meta z-array z-literal z-ts"&gt; &lt;span class="z-meta z-brace z-square z-ts"&gt;[&lt;/span&gt;&lt;span class="z-meta z-brace z-square z-ts"&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-square z-ts"&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-keyword z-control z-loop z-ts"&gt;for&lt;/span&gt; &lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-meta z-var z-expr z-ts"&gt;&lt;span class="z-storage z-type z-ts"&gt;var&lt;/span&gt; &lt;span class="z-meta z-var-single-variable z-expr z-ts"&gt;&lt;span class="z-meta z-definition z-variable z-ts"&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;i&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-ts"&gt;=&lt;/span&gt; &lt;span class="z-constant z-numeric z-decimal z-ts"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;i&lt;/span&gt; &lt;span class="z-keyword z-operator z-relational z-ts"&gt;&amp;lt;&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_cnt&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;i&lt;/span&gt;&lt;span class="z-keyword z-operator z-increment z-ts"&gt;++&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt; &lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-punctuation z-definition z-block z-ts"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-meta z-var z-expr z-ts"&gt;&lt;span class="z-storage z-type z-ts"&gt;var&lt;/span&gt; &lt;span class="z-meta z-var-single-variable z-expr z-ts"&gt;&lt;span class="z-meta z-definition z-variable z-ts"&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;chsz&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-ts"&gt;=&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_size&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-keyword z-control z-conditional z-ts"&gt;if&lt;/span&gt; &lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;seeker&lt;/span&gt; &lt;span class="z-keyword z-operator z-arithmetic z-ts"&gt;+&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chsz&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt; &lt;span class="z-keyword z-operator z-relational z-ts"&gt;&amp;gt;&lt;/span&gt; &lt;span class="z-variable z-other z-object z-ts"&gt;f&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-variable z-property z-dom z-ts"&gt;size&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt; &lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-punctuation z-definition z-block z-ts"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chsz&lt;/span&gt; &lt;span class="z-keyword z-operator z-assignment z-ts"&gt;=&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_last_size&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-punctuation z-definition z-block z-ts"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-meta z-var z-expr z-ts"&gt;&lt;span class="z-storage z-type z-ts"&gt;let&lt;/span&gt; &lt;span class="z-meta z-var-single-variable z-expr z-ts"&gt;&lt;span class="z-meta z-definition z-variable z-ts"&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-ts"&gt;=&lt;/span&gt; &lt;span class="z-meta z-function-call z-ts"&gt;&lt;span class="z-variable z-other z-object z-ts"&gt;f&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-function z-ts"&gt;slice&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;seeker&lt;/span&gt;&lt;span class="z-punctuation z-separator z-comma z-ts"&gt;,&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;seeker&lt;/span&gt; &lt;span class="z-keyword z-operator z-arithmetic z-ts"&gt;+&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chsz&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt; &lt;span class="z-comment z-line z-double-slash z-ts"&gt;&lt;span class="z-punctuation z-definition z-comment z-ts"&gt;//&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-double-slash z-ts"&gt; &amp;lt;--- slice&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;seeker&lt;/span&gt; &lt;span class="z-keyword z-operator z-assignment z-compound z-ts"&gt;+=&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chsz&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;promise_chain&lt;/span&gt; &lt;span class="z-keyword z-operator z-assignment z-ts"&gt;=&lt;/span&gt; &lt;span class="z-meta z-function-call z-ts"&gt;&lt;span class="z-variable z-other z-object z-ts"&gt;promise_chain&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-function z-promise z-ts"&gt;then&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-parameters z-ts"&gt;&lt;span class="z-punctuation z-definition z-parameters z-begin z-ts"&gt;(&lt;/span&gt;&lt;span class="z-meta z-paramter z-array-binding-pattern z-ts"&gt;&lt;span class="z-punctuation z-definition z-binding-pattern z-array z-ts"&gt;[&lt;/span&gt;&lt;span class="z-variable z-parameter z-ts"&gt;xhr&lt;/span&gt;&lt;span class="z-punctuation z-separator z-comma z-ts"&gt;,&lt;/span&gt; &lt;span class="z-variable z-parameter z-ts"&gt;chunk_fileno&lt;/span&gt;&lt;span class="z-punctuation z-definition z-binding-pattern z-array z-ts"&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-parameters z-end z-ts"&gt;)&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-storage z-type z-function z-arrow z-ts"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-punctuation z-definition z-block z-ts"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-keyword z-control z-conditional z-ts"&gt;if&lt;/span&gt; &lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;xhr&lt;/span&gt; &lt;span class="z-keyword z-operator z-comparison z-ts"&gt;!==&lt;/span&gt; &lt;span class="z-constant z-language z-null z-ts"&gt;null&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt; &lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-punctuation z-definition z-block z-ts"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-meta z-function-call z-ts"&gt;&lt;span class="z-variable z-other z-object z-ts"&gt;chunk_fileno&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-function z-ts"&gt;push&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-variable z-other z-object z-ts"&gt;xhr&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-variable z-property z-dom z-ts"&gt;responseText&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-punctuation z-definition z-block z-ts"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-keyword z-control z-flow z-ts"&gt;return&lt;/span&gt; &lt;span class="z-meta z-function-call z-ts"&gt;&lt;span class="z-entity z-name z-function z-ts"&gt;upload&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;upload_endpoint&lt;/span&gt;&lt;span class="z-punctuation z-separator z-comma z-ts"&gt;,&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk&lt;/span&gt;&lt;span class="z-punctuation z-separator z-comma z-ts"&gt;,&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_fileno&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-punctuation z-definition z-block z-ts"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-punctuation z-definition z-block z-ts"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-punctuation z-whitespace z-comment z-leading z-ts"&gt; &lt;/span&gt;&lt;span class="z-comment z-line z-double-slash z-ts"&gt;&lt;span class="z-punctuation z-definition z-comment z-ts"&gt;//&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-double-slash z-ts"&gt; finally upload meta file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-keyword z-control z-flow z-ts"&gt;return&lt;/span&gt; &lt;span class="z-meta z-function-call z-ts"&gt;&lt;span class="z-variable z-other z-object z-ts"&gt;promise_chain&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-function z-promise z-ts"&gt;then&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-parameters z-ts"&gt;&lt;span class="z-punctuation z-definition z-parameters z-begin z-ts"&gt;(&lt;/span&gt;&lt;span class="z-meta z-paramter z-array-binding-pattern z-ts"&gt;&lt;span class="z-punctuation z-definition z-binding-pattern z-array z-ts"&gt;[&lt;/span&gt;&lt;span class="z-variable z-parameter z-ts"&gt;xhr&lt;/span&gt;&lt;span class="z-punctuation z-separator z-comma z-ts"&gt;,&lt;/span&gt; &lt;span class="z-variable z-parameter z-ts"&gt;chunk_fileno&lt;/span&gt;&lt;span class="z-punctuation z-definition z-binding-pattern z-array z-ts"&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-parameters z-end z-ts"&gt;)&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-storage z-type z-function z-arrow z-ts"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-punctuation z-definition z-block z-ts"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-keyword z-control z-conditional z-ts"&gt;if&lt;/span&gt; &lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;xhr&lt;/span&gt; &lt;span class="z-keyword z-operator z-comparison z-ts"&gt;!==&lt;/span&gt; &lt;span class="z-constant z-language z-null z-ts"&gt;null&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt; &lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-punctuation z-definition z-block z-ts"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-meta z-function-call z-ts"&gt;&lt;span class="z-variable z-other z-object z-ts"&gt;chunk_fileno&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-function z-ts"&gt;push&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-variable z-other z-object z-ts"&gt;xhr&lt;/span&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-variable z-property z-dom z-ts"&gt;responseText&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-punctuation z-definition z-block z-ts"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-meta z-var z-expr z-ts"&gt;&lt;span class="z-storage z-type z-ts"&gt;var&lt;/span&gt; &lt;span class="z-meta z-var-single-variable z-expr z-ts"&gt;&lt;span class="z-meta z-definition z-variable z-ts"&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;meta&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-ts"&gt;=&lt;/span&gt; &lt;span class="z-meta z-function-call z-ts"&gt;&lt;span class="z-entity z-name z-function z-ts"&gt;meta_info&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;f&lt;/span&gt;&lt;span class="z-punctuation z-separator z-comma z-ts"&gt;,&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_cnt&lt;/span&gt;&lt;span class="z-punctuation z-separator z-comma z-ts"&gt;,&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_size&lt;/span&gt;&lt;span class="z-punctuation z-separator z-comma z-ts"&gt;,&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_last_size&lt;/span&gt;&lt;span class="z-punctuation z-separator z-comma z-ts"&gt;,&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_fileno&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-keyword z-control z-flow z-ts"&gt;return&lt;/span&gt; &lt;span class="z-meta z-function-call z-ts"&gt;&lt;span class="z-entity z-name z-function z-ts"&gt;upload_func&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;upload_endpoint&lt;/span&gt;&lt;span class="z-punctuation z-separator z-comma z-ts"&gt;,&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;meta&lt;/span&gt;&lt;span class="z-punctuation z-separator z-comma z-ts"&gt;,&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;chunk_fileno&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt; &lt;span class="z-punctuation z-definition z-block z-ts"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt;&lt;span class="z-meta z-function-call z-ts"&gt;&lt;span class="z-punctuation z-accessor z-ts"&gt;.&lt;/span&gt;&lt;span class="z-support z-function z-promise z-ts"&gt;then&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;(&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-ts"&gt;upload_success&lt;/span&gt;&lt;span class="z-punctuation z-separator z-comma z-ts"&gt;,&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-ts"&gt;upload_error&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-ts"&gt;&lt;span class="z-meta z-arrow z-ts"&gt;&lt;span class="z-meta z-block z-ts"&gt;&lt;span class="z-punctuation z-definition z-block z-ts"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-brace z-round z-ts"&gt;)&lt;/span&gt;&lt;span class="z-punctuation z-terminator z-statement z-ts"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With the &lt;code&gt;promise_chain&lt;/code&gt;, each chunk of the file will be uploaded one after the other!&lt;/p&gt;
&lt;p&gt;The chunks will be waiting until they are reassembled.&lt;/p&gt;
&lt;h1 id="reassemble-with-a-bash-script"&gt;&lt;a class="zola-anchor" href="#reassemble-with-a-bash-script" aria-label="Anchor link for: reassemble-with-a-bash-script"&gt;Reassemble with a bash script&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Once a file is upload we're left with numbered files in the previously specified directory.&lt;/p&gt;
&lt;p&gt;We can reconstruct the original files by searching for all files that start with the marker value &lt;code&gt;#ngxpupload_meta&lt;/code&gt;. With this meta file, we find all chunks of a file and concatenate them into a file named &lt;code&gt;$name&lt;/code&gt;. Finally, we remove all used chunks.&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;find&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;type&lt;/span&gt; f&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-keyword z-control z-loop z-while z-shell"&gt;while&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-read z-shell"&gt;read&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;r&lt;/span&gt; h&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-keyword z-control z-loop z-do z-shell"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-keyword z-control z-conditional z-if z-shell"&gt;if&lt;/span&gt; &lt;span class="z-support z-function z-test z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-keyword z-operator z-logical z-shell"&gt;!&lt;/span&gt; &lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;f&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;h&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-support z-function z-test z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-keyword z-control z-conditional z-then z-shell"&gt;then&lt;/span&gt; &lt;span class="z-keyword z-control z-flow z-continue z-shell"&gt;continue&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-keyword z-control z-conditional z-end z-shell"&gt;fi&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; file still exist&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-read z-shell"&gt;read&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;r&lt;/span&gt; &lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;n&lt;/span&gt; 16 head &lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;lt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;h&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-or z-shell"&gt;||&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;true &lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; read first 16 bytes&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-keyword z-control z-conditional z-if z-shell"&gt;if&lt;/span&gt; &lt;span class="z-support z-function z-test z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;head&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-shell"&gt;!=&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;#ngxpupload_meta&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-support z-function z-test z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-keyword z-control z-conditional z-then z-shell"&gt;then&lt;/span&gt; &lt;span class="z-keyword z-control z-flow z-continue z-shell"&gt;continue&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-keyword z-control z-conditional z-end z-shell"&gt;fi&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; if marker value&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;IFS&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;/&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-read z-shell"&gt;read&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;r&lt;/span&gt; name chk_cnt chk_sz chk_lsz &lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;lt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-assignment z-redirection z-process z-shell"&gt;&amp;lt;&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;jq&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;Rr&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;fromjson? | [(.name | sub(&amp;quot;/&amp;quot;;&amp;quot;_&amp;quot;;&amp;quot;g&amp;quot;)), (.chunk_cnt|tonumber), (.chunk_size|tonumber), (.chunk_last_size|tonumber)] | join(&amp;quot;/&amp;quot;)&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;h&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; extract json&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-eval z-shell"&gt;eval&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;chk_fileno=( &lt;span class="z-meta z-group z-expansion z-command z-parens z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;jq&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;Rr&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;arg&lt;/span&gt; d &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;fromjson? | .chunk_fileno[] | select(test(&amp;quot;^[0-9]*$&amp;quot;)) | &amp;quot;\($d)\(.)&amp;quot; | @sh&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;h&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt;&lt;/span&gt; )&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;stats&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-meta z-group z-expansion z-command z-parens z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;stat&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;c&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;%n %s&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;h&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;chk_fileno&lt;span class="z-punctuation z-section z-braces z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-variable z-language z-array z-shell"&gt;@&lt;/span&gt;&lt;span class="z-punctuation z-section z-braces z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sort&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;uniq&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;f1&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;c&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;stats&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;stats&lt;span class="z-keyword z-operator z-expansion z-shell"&gt;%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt; &lt;span class="z-keyword z-control z-regexp z-set z-begin z-shell"&gt;[&lt;/span&gt;0&lt;span class="z-keyword z-operator z-word z-shell"&gt;-&lt;/span&gt;9&lt;span class="z-keyword z-control z-regexp z-set z-end z-shell"&gt;]&lt;/span&gt;&lt;span class="z-keyword z-operator z-regexp z-quantifier z-shell"&gt;*&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;stats&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;stats&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-keyword z-operator z-substitution z-shell"&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-parameter z-switch z-shell"&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt; &lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;stats&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;stats&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-keyword z-operator z-substitution z-shell"&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-parameter z-switch z-shell"&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-string z-quoted z-single z-ansi-c z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;$&amp;#39;&lt;/span&gt;&lt;span class="z-constant z-character z-escape z-shell"&gt;\n&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;expected&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-arithmetic z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;((&lt;/span&gt; chk_cnt &lt;span class="z-keyword z-operator z-arithmetic z-shell"&gt;-&lt;/span&gt; &lt;span class="z-meta z-group z-parens z-shell"&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt; chk_lsz &lt;span class="z-keyword z-operator z-logical z-shell"&gt;&amp;gt;&lt;/span&gt; &lt;span class="z-constant z-numeric z-integer z-decimal z-shell"&gt;0&lt;/span&gt; &lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;chk_fileno&lt;span class="z-punctuation z-section z-braces z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-constant z-numeric z-integer z-decimal z-shell"&gt;0&lt;/span&gt;&lt;span class="z-punctuation z-section z-braces z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;chk_sz&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-keyword z-control z-conditional z-if z-shell"&gt;if&lt;/span&gt; &lt;span class="z-meta z-group z-arithmetic z-shell"&gt;&lt;span class="z-punctuation z-section z-arithmetic z-begin z-shell"&gt;((&lt;/span&gt; chk_lsz &lt;span class="z-keyword z-operator z-logical z-shell"&gt;&amp;gt;&lt;/span&gt; &lt;span class="z-constant z-numeric z-integer z-decimal z-shell"&gt;0&lt;/span&gt; &lt;span class="z-punctuation z-section z-arithmetic z-end z-shell"&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-keyword z-control z-conditional z-then z-shell"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;expected&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;+=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;1&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;chk_fileno&lt;span class="z-punctuation z-section z-braces z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-keyword z-operator z-arithmetic z-shell"&gt;-&lt;/span&gt;&lt;span class="z-constant z-numeric z-integer z-decimal z-shell"&gt;1&lt;/span&gt;&lt;span class="z-punctuation z-section z-braces z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;chk_lsz&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-keyword z-control z-conditional z-end z-shell"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-support z-function z-test z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;stats&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-shell"&gt;=&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;expected&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;1&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;h&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-support z-function z-test z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-or z-shell"&gt;||&lt;/span&gt; &lt;span class="z-punctuation z-definition z-compound z-braces z-begin z-shell"&gt;{&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-echo z-shell"&gt;echo&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;h&lt;/span&gt;&lt;/span&gt; meta invalid&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class="z-constant z-numeric z-integer z-decimal z-file-descriptor z-shell"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-keyword z-control z-flow z-break z-shell"&gt;break&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-punctuation z-definition z-compound z-braces z-end z-shell"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;cat&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;chk_fileno&lt;span class="z-punctuation z-section z-braces z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-variable z-language z-array z-shell"&gt;@&lt;/span&gt;&lt;span class="z-punctuation z-section z-braces z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;rm&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;f&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;h&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;chk_fileno&lt;span class="z-punctuation z-section z-braces z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-variable z-language z-array z-shell"&gt;@&lt;/span&gt;&lt;span class="z-punctuation z-section z-braces z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-keyword z-control z-loop z-end z-shell"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That's the gist of how &lt;a rel="noopener" target="_blank" href="https://github.com/izissise/nginx-explorer"&gt;nginx explorer&lt;/a&gt; uploads work!&lt;/p&gt;
&lt;p&gt;There are a lot of other cool features in the UI part that I've not wrote about yet and some I've yet to implement.&lt;/p&gt;
&lt;p&gt;Don't hesitate to go &lt;a rel="noopener" target="_blank" href="https://github.com/izissise/nginx-explorer"&gt;look at the project page&lt;/a&gt; and test nginx explorer &lt;code&gt;./ngxp.sh servethis&lt;/code&gt;.&lt;/p&gt;
&lt;section class="footnotes"&gt;
&lt;ol class="footnotes-list"&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;&lt;a rel="noopener" target="_blank" href="https://github.com/nginx/nginx/blob/stable-1.26/src/core/ngx_file.c#L348"&gt;Not actually random&lt;/a&gt; &lt;a href="#fr-1-1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</content></entry><entry xml:lang="en"><title>Nginx Explorer - Cookie Authentication</title><published>2024-11-04T00:00:00+00:00</published><updated>2024-11-04T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/ngxp-cookie-auth/"/><id>/posts/ngxp-cookie-auth/</id><content type="html" xml:base="/posts/ngxp-cookie-auth/">&lt;p&gt;&lt;a href="/posts/ngxp-listing/"&gt;Previously&lt;/a&gt;, we configured &lt;code&gt;nginx&lt;/code&gt; to list directories and files in html.
Now, let’s add authentication to restrict access to specific directories and files.&lt;/p&gt;
&lt;h1 id="basic-authentication"&gt;&lt;a class="zola-anchor" href="#basic-authentication" aria-label="Anchor link for: basic-authentication"&gt;Basic authentication&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The simplest web authentication method is &lt;a rel="noopener" target="_blank" href="https://en.wikipedia.org/wiki/Basic_access_authentication"&gt;basic authentication&lt;/a&gt;.
It requires an &lt;code&gt;Authorization&lt;/code&gt; header in each request.
However, browsers don’t support setting a header on requests without javascript,
and with javascript, there’s no sane way to stream file downloads to the browser’s download manager.&lt;/p&gt;
&lt;p&gt;So, once the initial basic auth login is validated, we'll use cookies, which browsers automatically include for each request on the same site.&lt;/p&gt;
&lt;p&gt;Let’s start by creating a &lt;code&gt;login&lt;/code&gt; endpoint with &lt;a rel="noopener" target="_blank" href="http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html"&gt;nginx basic auth&lt;/a&gt; to verify the user/password pair and set a cookie for users with valid credentials.&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt;...
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-storage z-type z-context z-nginx"&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-meta z-context z-location z-nginx"&gt;&lt;span class="z-storage z-type z-context z-location z-nginx"&gt;location&lt;/span&gt; &lt;span class="z-entity z-name z-context z-location z-nginx"&gt;@login_success &lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-headers z-nginx"&gt;add_header&lt;/span&gt; Set-Cookie &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;ngxp=???; max-age=15552000; path=/; SameSite=Lax; Secure; HttpOnly&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-support z-function z-module z-http z-rewrite z-nginx"&gt;return&lt;/span&gt; &lt;span class="z-string z-ipaddress z-nginx"&gt;200&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;login success&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-meta z-context z-location z-nginx"&gt;&lt;span class="z-storage z-type z-context z-location z-nginx"&gt;location&lt;/span&gt; ^~ &lt;span class="z-string z-regexp z-nginx"&gt;/___ngxp/login &lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-auth_basic z-nginx"&gt;auth_basic&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-unsupported z-nginx"&gt;auth_delay&lt;/span&gt; 1s;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-auth_basic z-nginx"&gt;auth_basic_user_file&lt;/span&gt; /opt/ngxp/basic.htpasswd;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;try_files&lt;/span&gt; _ @login_success;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To create entries in &lt;code&gt;basic.htpasswd&lt;/code&gt;, we use openssl&lt;sup class="footnote-reference" id="fr-1-1"&gt;&lt;a href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-printf z-shell"&gt;printf&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;%s:%s\n&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;user&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-command z-parens z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;openssl&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; passwd&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;5&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;password&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;gt;&amp;gt;&lt;/span&gt; basic.htpasswd&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can successfully login using basic auth on the &lt;code&gt;login&lt;/code&gt; endpoint!&lt;/p&gt;
&lt;h1 id="cookie-set"&gt;&lt;a class="zola-anchor" href="#cookie-set" aria-label="Anchor link for: cookie-set"&gt;Cookie set&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;To check that the user is authorized to access the current path and
that cookies cannot be hand-crafted,
we need to store the following in the cookie:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;username&lt;/li&gt;
&lt;li&gt;a secret, so a cookie cannot be hand crafted&lt;/li&gt;
&lt;li&gt;the paths base the user has access to&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using &lt;a rel="noopener" target="_blank" href="http://nginx.org/en/docs/http/ngx_http_map_module.html"&gt;nginx map module&lt;/a&gt;, we’ll store this information for each user:&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-comment z-line z-number-sign"&gt;# input output&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt;&lt;span class="z-storage z-type z-context z-nginx"&gt;map&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$username&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$user_cookie&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt; &lt;span class="z-constant z-language z-nginx"&gt; default&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-map z-nginx"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt; admin admin|d31d6b17bbc4df3ccb78d99db085e9d347b3e042e65d5878|/&lt;span class="z-punctuation z-definition z-map z-nginx"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt; alice alice|2406b10bfd4c356394a647d5657bde937124f602198f20f3|/alicefiles&lt;span class="z-punctuation z-definition z-map z-nginx"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt; bob bob|3f02f891206f421739edb7565d746a493653c4dfb01b6042|/bob|/photos&lt;span class="z-punctuation z-definition z-map z-nginx"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Later, with map's &lt;code&gt;include&lt;/code&gt; directive we can store it into a file.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;@login_success&lt;/code&gt;, assign the &lt;code&gt;ngxp&lt;/code&gt; cookie value.
When &lt;code&gt;$username&lt;/code&gt; is set with the basic auth username (&lt;code&gt;$remote_user&lt;/code&gt;), &lt;code&gt;$user_cookie&lt;/code&gt; is set with the mapped value.&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt; &lt;span class="z-meta z-context z-location z-nginx"&gt;&lt;span class="z-storage z-type z-context z-location z-nginx"&gt;location&lt;/span&gt; &lt;span class="z-entity z-name z-context z-location z-nginx"&gt;@login_success &lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-rewrite z-nginx"&gt;set&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$username&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$remote_user&lt;/span&gt;;&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign"&gt;# $remote_user is the basic_auth user in Authorization http header&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-headers z-nginx"&gt;add_header&lt;/span&gt; Set-Cookie &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;ngxp=&lt;span class="z-variable z-other z-nginx"&gt;$user_cookie&lt;/span&gt;; max-age=15552000; path=/; SameSite=Lax; Secure; HttpOnly&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-support z-function z-module z-http z-rewrite z-nginx"&gt;return&lt;/span&gt; &lt;span class="z-string z-ipaddress z-nginx"&gt;200&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;login success&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="cookie-check"&gt;&lt;a class="zola-anchor" href="#cookie-check" aria-label="Anchor link for: cookie-check"&gt;Cookie check&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The only thing left to do is to check if our cookie is valid and authorized for the current uri when listing files.
&lt;code&gt;$cookie_ngxp&lt;/code&gt; contains the http request provided cookie (from the browser).&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-comment z-line z-number-sign"&gt;# get username from http request&amp;#39;s cookie&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt;&lt;span class="z-storage z-type z-context z-nginx"&gt;map&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$cookie_ngxp&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$username&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt; &lt;span class="z-string z-regexp z-nginx"&gt;~&lt;/span&gt;&lt;span class="z-string z-regexp z-nginx"&gt;^(?&amp;lt;var&amp;gt;[^\|]+)\|.* $&lt;/span&gt;var&lt;span class="z-punctuation z-definition z-map z-nginx"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt; &lt;span class="z-constant z-language z-nginx"&gt; default&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-map z-nginx"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It's an untrusted user input, so we should check that
it matches exactly with the one set for the username.&lt;/p&gt;
&lt;p&gt;Since we just set &lt;code&gt;$username&lt;/code&gt;, &lt;code&gt;$user_cookie&lt;/code&gt; has the trusted cookie value for the user (if it exists),
so we check that both variables are equal:&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-unsupported z-nginx"&gt;map&lt;/span&gt; ${cookie_ngxp}&lt;span class="z-string z-regexp z-nginx"&gt;\\${user_cookie} $user_cookie_equal &lt;/span&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt; ~^([^\x5c]+)\x5c\1$ 1; &lt;span class="z-comment z-line z-number-sign"&gt;# if $user_cookie == $cookie_ngxp (\ == \x5c)&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-unsupported z-nginx"&gt;default&lt;/span&gt; 0;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By modifying &lt;code&gt;location /&lt;/code&gt; slightly, we can already restrict listing and download to requests with a valid cookie:&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt;...
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-storage z-type z-context z-nginx"&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-meta z-context z-location z-nginx"&gt;&lt;span class="z-storage z-type z-context z-location z-nginx"&gt;location&lt;/span&gt; &lt;span class="z-entity z-name z-context z-location z-nginx"&gt;/ &lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-keyword z-control z-nginx"&gt;if&lt;/span&gt; (&lt;span class="z-variable z-other z-nginx"&gt;$user_cookie_equal&lt;/span&gt; = 0) &lt;span class="z-meta z-block z-nginx"&gt;{ &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-support z-function z-module z-http z-rewrite z-nginx"&gt;return&lt;/span&gt; &lt;span class="z-string z-ipaddress z-nginx"&gt;401&lt;/span&gt;;&lt;/span&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="cookie-access"&gt;&lt;a class="zola-anchor" href="#cookie-access" aria-label="Anchor link for: cookie-access"&gt;Cookie access&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;We also want to have per path access rights, we first extract the path from &lt;code&gt;$user_cookie&lt;/code&gt;:&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt;...
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt;&lt;span class="z-storage z-type z-context z-nginx"&gt;map&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$user_cookie&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$user_cookie_accesses&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt; &lt;span class="z-string z-regexp z-nginx"&gt;~&lt;/span&gt;&lt;span class="z-string z-regexp z-nginx"&gt;^([^\|]+)\|([^\|]+)\|(?&amp;lt;var&amp;gt;.+)$&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$var&lt;/span&gt;&lt;span class="z-punctuation z-definition z-map z-nginx"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt; &lt;span class="z-constant z-language z-nginx"&gt; default&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-map z-nginx"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using a map with two variable as input, we can check if &lt;a rel="noopener" target="_blank" href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_uri"&gt;&lt;code&gt;$uri&lt;/code&gt;&lt;/a&gt;
starts with the extracted path&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt;...
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-unsupported z-nginx"&gt;map&lt;/span&gt; ${user_cookie_accesses}&lt;span class="z-string z-regexp z-nginx"&gt;\\${uri} $uri_access { # request uri &lt;/span&gt;access&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt; ~^(|[^\x5c]*\|)([^\|]+)(\x5c|\|[^\x5c]*\x5c)\2((?&amp;lt;=\/)|$|\/).*$ 1; &lt;span class="z-comment z-line z-number-sign"&gt;# if $user_cookie_accesses contains $uri (\ - \x5c)&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-unsupported z-nginx"&gt;default&lt;/span&gt; 0;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="cookie-authorized"&gt;&lt;a class="zola-anchor" href="#cookie-authorized" aria-label="Anchor link for: cookie-authorized"&gt;Cookie authorized&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Finally, ensure that both the cookie and path-based access rights are validated:&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt;...
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-unsupported z-nginx"&gt;map&lt;/span&gt; ${user_cookie_equal}${uri_access} &lt;span class="z-variable z-other z-nginx"&gt;$user_authorized&lt;/span&gt; {&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-unsupported z-nginx"&gt;11&lt;/span&gt; 1;&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign"&gt;# everything ok, authorize&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-unsupported z-nginx"&gt;default&lt;/span&gt; 0;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the file listing endpoint, check &lt;code&gt;$user_authorized&lt;/code&gt;:&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt;...
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-storage z-type z-context z-nginx"&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-meta z-context z-location z-nginx"&gt;&lt;span class="z-storage z-type z-context z-location z-nginx"&gt;location&lt;/span&gt; &lt;span class="z-entity z-name z-context z-location z-nginx"&gt;/ &lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-keyword z-control z-nginx"&gt;if&lt;/span&gt; (&lt;span class="z-variable z-other z-nginx"&gt;$user_authorized&lt;/span&gt; = 0) &lt;span class="z-meta z-block z-nginx"&gt;{ &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-support z-function z-module z-http z-rewrite z-nginx"&gt;return&lt;/span&gt; &lt;span class="z-string z-ipaddress z-nginx"&gt;401&lt;/span&gt;;&lt;/span&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We now have per user and path accesses!&lt;/p&gt;
&lt;p&gt;&lt;a href="/posts/ngxp-upload/"&gt;Next time we'll see how to upload files&lt;/a&gt;.&lt;/p&gt;
&lt;section class="footnotes"&gt;
&lt;ol class="footnotes-list"&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;You can also use htpasswd. &lt;a href="#fr-1-1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</content></entry><entry xml:lang="en"><title>Nginx Explorer - File listing</title><published>2024-10-30T00:00:00+00:00</published><updated>2024-10-30T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/ngxp-listing/"/><id>/posts/ngxp-listing/</id><content type="html" xml:base="/posts/ngxp-listing/">&lt;h1 id="tldr"&gt;&lt;a class="zola-anchor" href="#tldr" aria-label="Anchor link for: tldr"&gt;TLDR&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener" target="_blank" href="https://github.com/izissise/nginx-explorer"&gt;Nginx explorer&lt;/a&gt; is a minimal web interface for file download/upload using only nginx builtin modules.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://raw.github.com/izissise/nginx-explorer/master/images/example.png" alt="nginx explorer interface" loading="lazy" decoding="async" /&gt;&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;git&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; clone https://github.com/izissise/nginx-explorer.git&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;nginx-explorer/ngxp.sh&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; download_icons&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;nginx-explorer/ngxp.sh&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; servethis&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=""&gt;&lt;a class="zola-anchor" href="#" aria-label="Anchor link for: "&gt;Genesis&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Sharing files across devices can be a hassle.
Luckily, most devices support HTTP through a browser, which enables both file download and upload.&lt;/p&gt;
&lt;p&gt;There are existing options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;python -m SimpleHTTPServer&lt;/code&gt;, but performs poorly with large files.&lt;/li&gt;
&lt;li&gt;&lt;a rel="noopener" target="_blank" href="https://github.com/svenstaro/miniserve"&gt;&lt;code&gt;miniserve&lt;/code&gt;&lt;/a&gt; with good performance and a lot of features.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But today I want to write on nginx, it has a builtin file listing module and it is a battle tested webserver with great performances!&lt;/p&gt;
&lt;h1 id="-1"&gt;&lt;a class="zola-anchor" href="#-1" aria-label="Anchor link for: -1"&gt;Nginx&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;We configure nginx to list files using &lt;a rel="noopener" target="_blank" href="http://nginx.org/en/docs/http/ngx_http_autoindex_module.html"&gt;autoindex module&lt;/a&gt;:&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-charset z-nginx"&gt;charset&lt;/span&gt; UTF-8;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;server_tokens&lt;/span&gt;&lt;span class="z-constant z-language z-nginx"&gt; off&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-storage z-type z-context z-nginx"&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;listen&lt;/span&gt; &lt;span class="z-string z-ipaddress z-nginx"&gt;8080&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-meta z-context z-location z-nginx"&gt;&lt;span class="z-storage z-type z-context z-location z-nginx"&gt;location&lt;/span&gt; &lt;span class="z-entity z-name z-context z-location z-nginx"&gt;/ &lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;root&lt;/span&gt; /home/user/downloads;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-autoindex z-nginx"&gt;autoindex&lt;/span&gt;&lt;span class="z-constant z-language z-nginx"&gt; on&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-unsupported z-nginx"&gt;autoindex_format&lt;/span&gt; html;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let&amp;#39;s add some personalization, nginx autoindex start the response with an &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tag,
we can use nginx &lt;a rel="noopener" target="_blank" href="http://nginx.org/en/docs/http/ngx_http_sub_module.html"&gt;&lt;code&gt;sub_filter&lt;/code&gt;&lt;/a&gt; to replace the tag and inject our html:&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt;...
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt;&lt;span class="z-storage z-type z-context z-nginx"&gt;map&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$uri&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$cond_filter&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt; &lt;span class="z-string z-regexp z-nginx"&gt;~&lt;/span&gt;/$ &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;link rel=&amp;#39;stylesheet&amp;#39; href=&amp;#39;/___ngxp/main.css&amp;#39; /&amp;gt;&amp;lt;script src=&amp;#39;/___ngxp/main.js&amp;#39;&amp;gt;&amp;lt;/script&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-map z-nginx"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt; &lt;span class="z-constant z-language z-nginx"&gt; default&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;&amp;lt;html&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-map z-nginx"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-map z-nginx"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-storage z-type z-context z-nginx"&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-meta z-context z-location z-nginx"&gt;&lt;span class="z-storage z-type z-context z-location z-nginx"&gt;location&lt;/span&gt; &lt;span class="z-entity z-name z-context z-location z-nginx"&gt;/ &lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-unsupported z-nginx"&gt;sub_filter_once&lt;/span&gt; on;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-unsupported z-nginx"&gt;sub_filter&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-nginx"&gt;&amp;quot;&amp;lt;html&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="z-variable z-other z-nginx"&gt;$cond_filter&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are multiple things happening there:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;we want to replace the tag only once &lt;code&gt;sub_filter_once on;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;we don&amp;#39;t want files download to be modified, using &lt;code&gt;map $uri&lt;/code&gt; we inject html only for directories (when the uri ends with a &amp;#39;/&amp;#39;)&lt;/li&gt;
&lt;li&gt;for some reasons autoindex does not output &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;, so we add it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For &lt;code&gt;main.css&lt;/code&gt; and &lt;code&gt;main.js&lt;/code&gt;, we set up a separate path to exclude them from the file listing:&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt;...
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-storage z-type z-context z-nginx"&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt; &lt;span class="z-meta z-context z-location z-nginx"&gt;&lt;span class="z-storage z-type z-context z-location z-nginx"&gt;location&lt;/span&gt; ^~ &lt;span class="z-string z-regexp z-nginx"&gt;/___ngxp/ &lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; &lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;alias&lt;/span&gt; /var/www/ngxp/;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;&lt;span class="z-meta z-context z-location z-nginx"&gt; }&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-meta z-context z-server z-nginx"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We use &lt;a rel="noopener" target="_blank" href="https://nginx.org/en/docs/http/ngx_http_core_module.html#alias"&gt;&lt;code&gt;alias&lt;/code&gt;&lt;/a&gt; because we don&amp;#39;t want to keep the &lt;code&gt;/___ngxp/&lt;/code&gt; part to find app files.&lt;/p&gt;
&lt;p&gt;Last thing is to configure nginx for large files.
With the &lt;code&gt;sendfile&lt;/code&gt; directive nginx will tell the kernel to directly copy the data from the file to the tcp socket.
&lt;code&gt;gzip on;&lt;/code&gt; will compress text based files, for faster transfer of app files.&lt;/p&gt;
&lt;pre data-lang="nginx" data-name="default.conf" class="language-nginx z-code"&gt;&lt;code class="language-nginx" data-lang="nginx" data-name="default.conf"&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-gzip z-nginx"&gt;gzip&lt;/span&gt;&lt;span class="z-constant z-language z-nginx"&gt; on&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-gzip z-nginx"&gt;gzip_comp_level&lt;/span&gt; &lt;span class="z-string z-ipaddress z-nginx"&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-gzip z-nginx"&gt;gzip_min_length&lt;/span&gt; &lt;span class="z-string z-ipaddress z-nginx"&gt;256&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-gzip z-nginx"&gt;gzip_proxied&lt;/span&gt; any;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-gzip z-nginx"&gt;gzip_vary&lt;/span&gt;&lt;span class="z-constant z-language z-nginx"&gt; on&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-gzip z-nginx"&gt;gzip_types&lt;/span&gt; text/javascript text/js text/css text/xml text/plain application/javascript application/xml application/x-javascript image/svg+xml;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;sendfile&lt;/span&gt; &lt;span class="z-constant z-language z-nginx"&gt; on&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-unsupported z-nginx"&gt;sendfile_max_chunk&lt;/span&gt; 2m;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;tcp_nopush&lt;/span&gt; &lt;span class="z-constant z-language z-nginx"&gt; on&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;tcp_nodelay&lt;/span&gt; &lt;span class="z-constant z-language z-nginx"&gt; on&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-nginx"&gt;&lt;span class="z-punctuation z-definition z-variable"&gt;&lt;span class="z-keyword z-directive z-module z-http z-nginx"&gt;keepalive_timeout&lt;/span&gt; &lt;span class="z-string z-ipaddress z-nginx"&gt;65&lt;/span&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run this in a container, mount the configuration and directories:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;docker&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; run &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;rm&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;it&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;log-driver&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-option z-shell"&gt;=&lt;/span&gt;none &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;user&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-option z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-command z-parens z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;id&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;u&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt;&lt;/span&gt;:&lt;span class="z-meta z-group z-expansion z-command z-parens z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;id&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;userns&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-option z-shell"&gt;=&lt;/span&gt;keep-id&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;cap-drop&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-option z-shell"&gt;=&lt;/span&gt;ALL &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;tmpfs&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-option z-shell"&gt;=&lt;/span&gt;/tmp:rw,noexec,nosuid,size=70m &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;expose&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-option z-shell"&gt;=&lt;/span&gt;8080&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;p&lt;/span&gt; 8080:8080 &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;v&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;PWD&lt;/span&gt;&lt;/span&gt;/docker_nginx.conf:/etc/nginx/nginx.conf:ro&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;v&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;PWD&lt;/span&gt;&lt;/span&gt;/nginx-explorer.conf:/etc/nginx/conf.d/default.conf:ro&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;v&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;PWD&lt;/span&gt;&lt;/span&gt;/main.css:/var/www/ngxp/main.css:ro&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;v&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;PWD&lt;/span&gt;&lt;/span&gt;/main.js:/var/www/ngxp/main.js:ro&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;v&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOME&lt;/span&gt;&lt;/span&gt;:/home/user/downloads:ro&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; nginx&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;docker_nginx.conf&lt;/code&gt; configures nginx for a read-only container&lt;sup class="footnote-reference" id="fr-1-1"&gt;&lt;a href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;.
&lt;code&gt;nginx-explorer.conf&lt;/code&gt; the configuration we built.
&lt;code&gt;$HOME&lt;/code&gt; is the path that will be listed.&lt;/p&gt;
&lt;p&gt;&lt;a href="/posts/ngxp-cookie-auth/"&gt;Next post we&amp;#39;ll see how to use cookies to have a per directories authentication&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy files transfer!&lt;/p&gt;
&lt;section class="footnotes"&gt;
&lt;ol class="footnotes-list"&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;&lt;a rel="noopener" target="_blank" href="https://github.com/izissise/nginx-explorer/blob/master/docker_nginx.conf"&gt;It puts the pid file in &lt;code&gt;/tmp&lt;/code&gt;&lt;/a&gt; &lt;a href="#fr-1-1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</content></entry><entry xml:lang="en"><title>Modern PATH environment variable</title><published>2024-10-08T00:00:00+00:00</published><updated>2024-10-18T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/env-path/"/><id>/posts/env-path/</id><content type="html" xml:base="/posts/env-path/">&lt;p&gt;The &lt;code&gt;PATH&lt;/code&gt; environment variable is read by the shell or libc to find
and execute programs, this is how the shell can find &lt;code&gt;/bin/ls&lt;/code&gt; when &lt;code&gt;ls&lt;/code&gt; is typed
in a terminal.&lt;/p&gt;
&lt;h1 id="shrink-it"&gt;&lt;a class="zola-anchor" href="#shrink-it" aria-label="Anchor link for: shrink-it"&gt;Shrink it&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;On Debian based desktop systems the default &lt;code&gt;PATH&lt;/code&gt; variable look like this:&lt;/p&gt;
&lt;pre data-name="/etc/environment" class="z-code"&gt;&lt;code data-name="/etc/environment"&gt;&lt;span class="z-text z-plain"&gt;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Much of this is not really necessary.&lt;/p&gt;
&lt;p&gt;First, on modern systems, &lt;a rel="noopener" target="_blank" href="https://wiki.debian.org/UsrMerge"&gt;&lt;code&gt;/{bin,sbin}/&lt;/code&gt; directories are symlinks to &lt;code&gt;/usr/{bin,sbin}/&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/usr/local&lt;/code&gt; has no use to me, if I compile/install software I'd rather they be put in the default locations&lt;sup class="footnote-reference" id="fr-1-1"&gt;&lt;a href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Because sometimes I forgot to do &lt;code&gt;./configure --prefix=/usr&lt;/code&gt; before compiling, I have setup &lt;code&gt;/usr/local&lt;/code&gt; to symlink to &lt;code&gt;/usr&lt;/code&gt; (&lt;code&gt;cd /usr &amp;amp;&amp;amp; ln -s /usr local&lt;/code&gt;). For software that are not found in public repositories and that should run as a daemon I use &lt;code&gt;/opt&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This leaves a much shorter &lt;code&gt;PATH&lt;/code&gt;:&lt;/p&gt;
&lt;pre data-name="/etc/environment" class="z-code"&gt;&lt;code data-name="/etc/environment"&gt;&lt;span class="z-text z-plain"&gt;PATH=/usr/sbin:/usr/bin:/usr/games
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To go further, I remove &lt;code&gt;/usr/games&lt;/code&gt; since I run GUI programs (like games) through their &lt;code&gt;.desktop&lt;/code&gt; entries.
These entries are located at &lt;a rel="noopener" target="_blank" href="https://specifications.freedesktop.org/menu-spec/latest/paths.html"&gt;&lt;code&gt;${XDG_DATA_DIRS}/applications&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And as of the year 2024 that's it, I'll use the root symlinks to have a little bit shorter string:&lt;/p&gt;
&lt;pre data-name="/etc/environment" class="z-code"&gt;&lt;code data-name="/etc/environment"&gt;&lt;span class="z-text z-plain"&gt;PATH=/sbin:/bin
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Eventually, &lt;code&gt;/usr/sbin&lt;/code&gt; might merge into &lt;code&gt;/usr/bin&lt;/code&gt;, so only &lt;code&gt;/bin&lt;/code&gt; will be needed.&lt;/p&gt;
&lt;h1 id="expand-it"&gt;&lt;a class="zola-anchor" href="#expand-it" aria-label="Anchor link for: expand-it"&gt;Expand it&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Setting &lt;code&gt;PATH&lt;/code&gt; in &lt;code&gt;/etc/environment&lt;/code&gt; is not the entire picture.&lt;/p&gt;
&lt;p&gt;Once the shell is loaded, it also reads &lt;code&gt;/etc/profile&lt;/code&gt; and &lt;code&gt;~/.profile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Modern programming environments, like Rust or Python, often add an entry to the &lt;code&gt;PATH&lt;/code&gt;. However, I prefer to be explicit about what goes into the &lt;code&gt;PATH&lt;/code&gt;, so I create symlinks:&lt;/p&gt;
&lt;pre data-lang="tty" class="language-tty z-code"&gt;&lt;code class="language-tty" data-lang="tty"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;$&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;file&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-variable z-language z-tilde z-shell"&gt;~&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;/bin&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-variable z-language z-tilde z-shell"&gt;~&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;/bin-rust&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-variable z-language z-tilde z-shell"&gt;~&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;/bin-py&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-variable z-language z-tilde z-shell"&gt;~&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;/bin-go&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-variable z-language z-tilde z-shell"&gt;~&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;/bin-js&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-variable z-language z-tilde z-shell"&gt;~&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-punctuation z-separator z-path z-shell"&gt;/&lt;/span&gt;bin:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;directory&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-variable z-language z-tilde z-shell"&gt;~&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-punctuation z-separator z-path z-shell"&gt;/&lt;/span&gt;bin-rust:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;symbolic&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;link&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;.cargo/bin&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-variable z-language z-tilde z-shell"&gt;~&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-punctuation z-separator z-path z-shell"&gt;/&lt;/span&gt;bin-py:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;symbolic&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;link&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;.local/bin&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-variable z-language z-tilde z-shell"&gt;~&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-punctuation z-separator z-path z-shell"&gt;/&lt;/span&gt;bin-go:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;symbolic&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;link&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;.golang/bin&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-variable z-language z-tilde z-shell"&gt;~&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-interpolation z-tilde z-shell"&gt;&lt;span class="z-punctuation z-separator z-path z-shell"&gt;/&lt;/span&gt;bin-js:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;symbolic&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;link&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;.nvm/versions/node/v22.1.0/bin&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I also want system binaries to take precedence on user one, so
my &lt;code&gt;.profile&lt;/code&gt; I make sure that &lt;code&gt;$PATH&lt;/code&gt; comes first when reassigning:&lt;/p&gt;
&lt;pre data-lang="bash" data-name="~/.profile" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash" data-name="~/.profile"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; ...&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; Hide default GOPATH&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-keyword z-control z-conditional z-if z-shell"&gt;if&lt;/span&gt; &lt;span class="z-support z-function z-test z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;d&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOME&lt;/span&gt;&lt;/span&gt;/.golang&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-support z-function z-test z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-keyword z-control z-conditional z-then z-shell"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;GOPATH&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOME&lt;/span&gt;&lt;/span&gt;/.golang&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-keyword z-control z-conditional z-end z-shell"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; User&amp;#39;s local bin if it exists&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-keyword z-control z-conditional z-if z-shell"&gt;if&lt;/span&gt; &lt;span class="z-support z-function z-test z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;d&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOME&lt;/span&gt;&lt;/span&gt;/bin&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-support z-function z-test z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-keyword z-control z-conditional z-then z-shell"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;PATH&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;PATH&lt;/span&gt;&lt;/span&gt;:&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOME&lt;/span&gt;&lt;/span&gt;/bin&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-keyword z-control z-conditional z-end z-shell"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; RUST local bin if it exists&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-keyword z-control z-conditional z-if z-shell"&gt;if&lt;/span&gt; &lt;span class="z-support z-function z-test z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;d&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOME&lt;/span&gt;&lt;/span&gt;/bin-rust&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-support z-function z-test z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-keyword z-control z-conditional z-then z-shell"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;PATH&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;PATH&lt;/span&gt;&lt;/span&gt;:&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOME&lt;/span&gt;&lt;/span&gt;/bin-rust&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-keyword z-control z-conditional z-end z-shell"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; Python local bin if it exists&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-keyword z-control z-conditional z-if z-shell"&gt;if&lt;/span&gt; &lt;span class="z-support z-function z-test z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;d&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOME&lt;/span&gt;&lt;/span&gt;/bin-py&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-support z-function z-test z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-keyword z-control z-conditional z-then z-shell"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;PATH&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;PATH&lt;/span&gt;&lt;/span&gt;:&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOME&lt;/span&gt;&lt;/span&gt;/bin-py&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-keyword z-control z-conditional z-end z-shell"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; Golang local bin if it exists&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-keyword z-control z-conditional z-if z-shell"&gt;if&lt;/span&gt; &lt;span class="z-support z-function z-test z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;d&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOME&lt;/span&gt;&lt;/span&gt;/bin-go&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-support z-function z-test z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-keyword z-control z-conditional z-then z-shell"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;PATH&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;PATH&lt;/span&gt;&lt;/span&gt;:&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOME&lt;/span&gt;&lt;/span&gt;/bin-go&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-keyword z-control z-conditional z-end z-shell"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; NodeJs local bin if it exists&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-keyword z-control z-conditional z-if z-shell"&gt;if&lt;/span&gt; &lt;span class="z-support z-function z-test z-begin z-shell"&gt;[&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;d&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOME&lt;/span&gt;&lt;/span&gt;/bin-js&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-support z-function z-test z-end z-shell"&gt;]&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-keyword z-control z-conditional z-then z-shell"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;PATH&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;PATH&lt;/span&gt;&lt;/span&gt;:&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOME&lt;/span&gt;&lt;/span&gt;/bin-js&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-keyword z-control z-conditional z-end z-shell"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-storage z-modifier z-shell"&gt;export&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;GOPATH&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-storage z-modifier z-shell"&gt;export&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;PATH&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this setup, I can more easily verify if the correct binary is called.&lt;/p&gt;
&lt;section class="footnotes"&gt;
&lt;ol class="footnotes-list"&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;&lt;code&gt;man hier&lt;/code&gt; for a description of system path. &lt;a href="#fr-1-1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</content></entry><entry xml:lang="en"><title>Git Config</title><published>2024-08-04T00:00:00+00:00</published><updated>2024-08-04T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/gitconfig/"/><id>/posts/gitconfig/</id><content type="html" xml:base="/posts/gitconfig/">&lt;p&gt;Git can change configuration depending on the directory you're in.
By using this feature, you can create a directory structure with context-aware Git configurations.&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;includeIf&lt;/code&gt; in &lt;code&gt;~/.gitconfig&lt;/code&gt;:&lt;/p&gt;
&lt;pre data-lang="ini" data-name="/.gitconfig" class="language-ini z-code"&gt;&lt;code class="language-ini" data-lang="ini" data-name="/.gitconfig"&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[include]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;path&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-genconfig"&gt;&amp;quot;~/.config/git/main.gitconfig&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[includeIf &amp;quot;gitdir:~/work/companyA/**&amp;quot;]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;path&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-genconfig"&gt;&amp;quot;~/.config/git/companyA.gitconfig&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[includeIf &amp;quot;gitdir:~/work/companyB/**&amp;quot;]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;path&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-genconfig"&gt;&amp;quot;~/.config/git/companyB.gitconfig&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we everything under &lt;code&gt;~/work/companyA/&lt;/code&gt;
will get the git configuration from &lt;code&gt;~/.config/git/companyA.gitconfig&lt;/code&gt;,
and similarly for &lt;code&gt;companyB&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id="identity"&gt;&lt;a class="zola-anchor" href="#identity" aria-label="Anchor link for: identity"&gt;Identity&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Now we can set our special configuration in its own file for &lt;code&gt;companyA&lt;/code&gt;:&lt;/p&gt;
&lt;pre data-lang="ini" data-name="~/.config/git/companyA.gitconfig" class="language-ini z-code"&gt;&lt;code class="language-ini" data-lang="ini" data-name="~/.config/git/companyA.gitconfig"&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[user]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;name&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; Hugues
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;email&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; h&lt;span class="z-storage z-source z-genconfig"&gt;@companyA&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;.&lt;/span&gt;com
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;signingkey&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;~&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;/&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;.&lt;/span&gt;ssh&lt;span class="z-keyword z-operator z-genconfig"&gt;/&lt;/span&gt;keys&lt;span class="z-keyword z-operator z-genconfig"&gt;/&lt;/span&gt;compA
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[commit]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;gpgsign&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-constant z-language z-genconfig"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[gpg]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;format&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; ssh
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[gpg &amp;quot;ssh&amp;quot;]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;allowedSignersFile&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;~&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;/&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;.&lt;/span&gt;&lt;span class="z-support z-type z-genconfig"&gt;ssh/git_allowed_signers&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-comment z-genconfig"&gt;&lt;span class="z-comment z-line z-number-sign z-genconfig"&gt;# git clone compA:repo
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[url &amp;quot;ssh://git@compA.com/&amp;quot;]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;insteadOf&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; compA&lt;span class="z-keyword z-operator z-genconfig"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;pushInsteadOf&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; compA&lt;span class="z-keyword z-operator z-genconfig"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This allows us to easily have separate identities depending on the directory you're in.
We also get commits signed with the SSH key that we use to access the repository.
Finally, we make an alias for the company URL, making it simpler to clone new repos or to modify the URL everywhere if the repository ever changes URL.&lt;/p&gt;
&lt;h1 id="global-preferences"&gt;&lt;a class="zola-anchor" href="#global-preferences" aria-label="Anchor link for: global-preferences"&gt;Global preferences&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;We usually want to retain certain configurations and aliases no matter the directory.&lt;/p&gt;
&lt;pre data-lang="ini" data-name="~/.config/git/main.gitconfig" class="language-ini z-code"&gt;&lt;code class="language-ini" data-lang="ini" data-name="~/.config/git/main.gitconfig"&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[core]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;excludesfile&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-genconfig"&gt;&amp;quot;~/.config/git/main.gitignore&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[commit]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;template&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-genconfig"&gt;&amp;quot;~/.config/git/main.commit.template&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[init]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;defaultBranch&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; main
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[pull]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;ff&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-constant z-language z-genconfig"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;commit&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-constant z-language z-genconfig"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[push]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;default&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; simple
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[merge]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;ff&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-constant z-language z-genconfig"&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;commit&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-constant z-language z-genconfig"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[color]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;diff&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; auto
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;status&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; auto
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;branch&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; auto
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[color &amp;quot;status&amp;quot;]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;added&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; green
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;changed&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; red
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;untracked&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; yellow
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;branch&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; magenta
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-storage z-type z-genconfig"&gt;[alias]
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;ci&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; commit
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;co&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; checkout
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;sw&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; switch
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;st&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; status &lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;sb
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;br&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; branch &lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;vv
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;cl&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; clone &lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;recursive
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;push-force&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; push &lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;force&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;with&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;lease
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;publish&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-genconfig"&gt;&amp;quot;!git push -u origin `git symbolic-ref HEAD | sed -e &amp;#39;s#^refs/heads/##&amp;#39;`&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;serve&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;!&lt;/span&gt;git daemon &lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;base&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;path&lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;.&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;export&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;all &lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;enable&lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;receive&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;pack &lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;reuseaddr &lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;informative&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;errors &lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;&lt;span class="z-keyword z-operator z-genconfig"&gt;-&lt;/span&gt;verbose
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt; &lt;span class="z-variable z-parameter z-genconfig"&gt;env&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-genconfig"&gt;!&lt;/span&gt;env
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we set up a global &lt;code&gt;gitignore&lt;/code&gt;. In it, there are IDE configuration paths and a line local-untracked,
which allows having a local scratchpad in every git project that won't end up in source revision.&lt;/p&gt;
&lt;p&gt;We choose the main default branch name, and there are preferred default behaviors for &lt;code&gt;push&lt;/code&gt;, &lt;code&gt;pull&lt;/code&gt;, and &lt;code&gt;merge&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id="commit-template"&gt;&lt;a class="zola-anchor" href="#commit-template" aria-label="Anchor link for: commit-template"&gt;Commit template&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;It will appear every time you use the &lt;code&gt;git commit&lt;/code&gt; command.
It is a good place to remind you what you should write
and it can be overridden for a specific company if they have a different policy.&lt;/p&gt;
&lt;p&gt;Here we use good practices from the internet:&lt;/p&gt;
&lt;pre data-lang="txt" data-name="~/.config/git/main.commit.template" class="language-txt z-code"&gt;&lt;code class="language-txt" data-lang="txt" data-name="~/.config/git/main.commit.template"&gt;&lt;span class="z-text z-plain"&gt;
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;# Title No more than 50 chars. ##### stop here: #
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;# Title: Summary, imperative, start upper case, don&amp;#39;t end with a period
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;# Remember blank line between title and body.
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;# Body: Explain *what* and *why* (not *how*). Include issue ID.
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;# Wrap at 72 chars. ################################## which is here: #
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;# At the end: Include Co-authored-by for all contributors.
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;# Include at least one empty line before it. Format:
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;# Co-authored-by: name &amp;lt;user@users.noreply.com&amp;gt;
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;#
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;# Template inspired by:
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;# How to Write a Git Commit Message:
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;# https://chris.beams.io/posts/git-commit/
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="update-02-2025"&gt;&lt;a class="zola-anchor" href="#update-02-2025" aria-label="Anchor link for: update-02-2025"&gt;Update 02-2025&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I recently updated my config following this excellent post &lt;a rel="noopener" target="_blank" href="https://blog.gitbutler.com/how-git-core-devs-configure-git/"&gt;https://blog.gitbutler.com/how-git-core-devs-configure-git/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Happy versionning!&lt;/p&gt;</content></entry><entry xml:lang="en"><title>Unified Kernel Image</title><published>2024-07-12T00:00:00+00:00</published><updated>2024-07-12T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/uki/"/><id>/posts/uki/</id><content type="html" xml:base="/posts/uki/">&lt;h1 id="unified-kernel-image"&gt;&lt;a class="zola-anchor" href="#unified-kernel-image" aria-label="Anchor link for: unified-kernel-image"&gt;Unified Kernel Image&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;UKIs can run on UEFI systems and simplify the distribution of small kernel images. For example, they simplify network booting with iPXE. UKIs make rootfs and kernels composable, making it possible to derive a rootfs for multiple kernel versions with one file for each pair.&lt;/p&gt;
&lt;p&gt;A Unified Kernel Image (UKI) is a combination of a UEFI boot stub program, a Linux kernel image, an initramfs, and further resources in a single UEFI PE file (device tree, cpu µcode, splash screen, secure boot sig/key, ...). This file can either be directly invoked by the UEFI firmware or through a boot loader.&lt;/p&gt;
&lt;h1 id="the-simple-way"&gt;&lt;a class="zola-anchor" href="#the-simple-way" aria-label="Anchor link for: the-simple-way"&gt;The simple way&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;If you use a systemd-based OS and want to use UKIs, you're probably better off using &lt;a rel="noopener" target="_blank" href="https://www.freedesktop.org/wiki/Software/systemd/systemd-boot/"&gt;systemd-boot&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this post, we aim to create a ready-to-boot UKI for another machine rather than the one we are creating it from.&lt;/p&gt;
&lt;p&gt;We can use &lt;a rel="noopener" target="_blank" href="https://www.freedesktop.org/software/systemd/man/latest/ukify.html"&gt;ukify&lt;/a&gt;, which is a dedicated tool to create UKIs, but I'd like to get a little more in-depth on how they are constructed.&lt;/p&gt;
&lt;h1 id="linux-efi"&gt;&lt;a class="zola-anchor" href="#linux-efi" aria-label="Anchor link for: linux-efi"&gt;Linux EFI&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The Linux kernel should be compiled with &lt;code&gt;CONFIG_EFI_STUB=y&lt;/code&gt; see &lt;a rel="noopener" target="_blank" href="https://docs.kernel.org/admin-guide/efi-stub.html"&gt;https://docs.kernel.org/admin-guide/efi-stub.html&lt;/a&gt;&lt;/p&gt;
&lt;blockquote class="note"&gt;
&lt;p class="box-title"&gt;
&lt;i class="icon"&gt;&lt;/i&gt;note&lt;/p&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;p&gt;When building the kernel with EFI support, the final artifact name in the &lt;code&gt;arch/"$ARCH"/boot/&lt;/code&gt;
directory changes. For &lt;code&gt;X86_64&lt;/code&gt;, it will be named &lt;code&gt;bzImage&lt;/code&gt;, but for other architectures, it will be &lt;code&gt;vmlinuz.efi&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let's find a pre-compiled kernel in the Arch Linux repository&lt;sup class="footnote-reference" id="fr-1-1"&gt;&lt;a href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-storage z-modifier z-shell"&gt;export&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;klatest&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-meta z-group z-expansion z-command z-parens z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;curl&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;https://archive.archlinux.org/packages/l/linux/&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;xmllint&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;recover&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;html&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;xpath&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;string(//a[last() - 1]/@href)&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt; -&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; We&amp;#39;re only interested in the vmlinuz file&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;curl&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;https://archive.archlinux.org/packages/l/linux/&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;klatest&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;tar&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;zstd&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;wildcards&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;no-anchored&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;transform&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-option z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;s:.*/::&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;xf&lt;/span&gt; - &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;vmlinuz&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can see with &lt;code&gt;readpe&lt;/code&gt; that the file is indeed a PE executable:
&lt;details&gt;
&lt;summary&gt;
readpe vmlinuz
&lt;/summary&gt;
&lt;div&gt;
&lt;pre data-lang="txt" class="language-txt z-code"&gt;&lt;code class="language-txt" data-lang="txt"&gt;&lt;span class="z-text z-plain"&gt;DOS Header
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Magic number: 0x5a4d (MZ)
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Bytes in last page: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Pages in file: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Relocations: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size of header in paragraphs: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Minimum extra paragraphs: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Maximum extra paragraphs: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Initial (relative) SS value: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Initial SP value: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Initial IP value: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Initial (relative) CS value: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Address of relocation table: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Overlay number: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; OEM identifier: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; OEM information: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; PE header offset: 0x40
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;COFF/File header
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Machine: 0x8664 IMAGE_FILE_MACHINE_AMD64
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Number of sections: 4
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Date/time stamp: 0 (Thu, 01 Jan 1970 00:00:00 UTC)
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Symbol Table offset: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Number of symbols: 1
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size of optional header: 0xa0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Characteristics: 0x206
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Characteristics names
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_FILE_EXECUTABLE_IMAGE
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_FILE_LINE_NUMS_STRIPPED
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_FILE_DEBUG_STRIPPED
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;Optional/Image header
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Magic number: 0x20b (PE32+)
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Linker major version: 2
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Linker minor version: 20
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size of .text section: 0xc99000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size of .data section: 0x5f000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size of .bss section: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Entrypoint: 0xc93579
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Address of .text section: 0x5000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; ImageBase: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Alignment of sections: 0x1000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Alignment factor: 0x200
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Major version of required OS: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Minor version of required OS: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Major version of image: 3
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Minor version of image: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Major version of subsystem: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Minor version of subsystem: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size of image: 0xcfd000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size of headers: 0x1000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Checksum: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Subsystem required: 0xa (IMAGE_SUBSYSTEM_EFI_APPLICATION)
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; DLL characteristics: 0x100
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; DLL characteristics names
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_DLLCHARACTERISTICS_NX_COMPAT
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size of stack to reserve: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size of stack to commit: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size of heap space to reserve: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size of heap space to commit: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;Data directories
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;Imported functions
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;Exported functions
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;Sections
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Section
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Name: .setup
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Virtual Size: 0x3000 (12288 bytes)
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Virtual Address: 0x1000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size Of Raw Data: 0x3000 (12288 bytes)
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Pointer To Raw Data: 0x1000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Number Of Relocations: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Characteristics: 0x42000040
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Characteristic Names
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_SCN_CNT_INITIALIZED_DATA
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_SCN_MEM_DISCARDABLE
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_SCN_MEM_READ
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Section
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Name: .compat
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Virtual Size: 0x1000 (4096 bytes)
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Virtual Address: 0x4000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size Of Raw Data: 0x1000 (4096 bytes)
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Pointer To Raw Data: 0x4000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Number Of Relocations: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Characteristics: 0x42000040
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Characteristic Names
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_SCN_CNT_INITIALIZED_DATA
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_SCN_MEM_DISCARDABLE
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_SCN_MEM_READ
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Section
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Name: .text
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Virtual Size: 0xc99000 (13209600 bytes)
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Virtual Address: 0x5000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size Of Raw Data: 0xc99000 (13209600 bytes)
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Pointer To Raw Data: 0x5000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Number Of Relocations: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Characteristics: 0x60000020
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Characteristic Names
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_SCN_CNT_CODE
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_SCN_MEM_EXECUTE
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_SCN_MEM_READ
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Section
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Name: .data
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Virtual Size: 0x5f000 (389120 bytes)
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Virtual Address: 0xc9e000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Size Of Raw Data: 0x1200 (4608 bytes)
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Pointer To Raw Data: 0xc9e000
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Number Of Relocations: 0
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Characteristics: 0xc0000040
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; Characteristic Names
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_SCN_CNT_INITIALIZED_DATA
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_SCN_MEM_READ
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; IMAGE_SCN_MEM_WRITE
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/p&gt;
&lt;p&gt;With this, we can already boot Linux directly from the UEFI:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;qemu-system-x86_64&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;m&lt;/span&gt; 512M&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;enable-kvm&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;nographic&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;cpu&lt;/span&gt; host&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;bios&lt;/span&gt; /usr/share/ovmf/OVMF.fd&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;drive&lt;/span&gt; file=fat:rw:./,format=raw&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; Press ESC to enter uefi shell&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;fs0:vmlinuz&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; console=ttyS0 loglevel=6&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;iframe loading="lazy" width="656" height="443" class="center" frameborder="0" type="text&amp;#x2F;svg+xml" src="&amp;#x2F;posts&amp;#x2F;uki&amp;#x2F;efi_kernel.term.svg" data-display-frame="1715" &gt;&lt;/iframe&gt;
&lt;p&gt;The kernel crashed because there is no root FS, but it successfully booted as an EFI app.&lt;/p&gt;
&lt;h1 id="sd-boot"&gt;&lt;a class="zola-anchor" href="#sd-boot" aria-label="Anchor link for: sd-boot"&gt;SD Boot&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Linux doesn't support UKIs directly, so we need glue code to copy UKI sections to memory and pass control to Linux.
In the future UKI might directly be supported by the kernel, see &lt;a rel="noopener" target="_blank" href="https://github.com/rhboot/nmbl-poc"&gt;nmbl&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For now, we need to compile systemd efi stub as the bootloader to put in the UKI so it copies Linux and initrd to the right place in memory, displays the splash screen, measures secure boot values, and finally gives control to Linux with the cmdline and dtb.&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;git&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; clone https://github.com/systemd/systemd.git&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-cd z-shell"&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; systemd&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;meson&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; setup build&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-cd z-shell"&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; build&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;ninja&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; src/boot/efi/linuxx64.efi.stub&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;cp&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; src/boot/efi/linuxx64.efi.stub ../../uki_base.efi&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="populating-uki"&gt;&lt;a class="zola-anchor" href="#populating-uki" aria-label="Anchor link for: populating-uki"&gt;Populating UKI&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;UKIs have a &lt;code&gt;PE&lt;/code&gt; file layout with standardized sections&lt;sup class="footnote-reference" id="fr-2-1"&gt;&lt;a href="#fn-2"&gt;2&lt;/a&gt;&lt;/sup&gt;. We will use the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.linux&lt;/code&gt; where we put the kernel; we can just copy &lt;code&gt;vmlinuz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.osrel&lt;/code&gt; a key-value file with metadata about the booted image&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.initrd&lt;/code&gt; the initramfs that will be loaded with the kernel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Previously we &lt;a href="/posts/initramfs/#:~:text=If%20you%27re%20following%20along,archive%21"&gt;built a minimal rootfs&lt;/a&gt; that we are going to use in our UKI&lt;/p&gt;
&lt;p&gt;Creating a UKI involves mainly &lt;code&gt;objcopy&lt;/code&gt; with the right parameters to pack all data into one &lt;code&gt;PE&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;We create two files that will be the UKI metadata and kernel command line:&lt;/p&gt;
&lt;pre data-lang="txt" class="language-txt z-code"&gt;&lt;code class="language-txt" data-lang="txt"&gt;&lt;span class="z-text z-plain"&gt;# cmdline.txt
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;console=ttyS0 loglevel=6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre data-lang="txt" class="language-txt z-code"&gt;&lt;code class="language-txt" data-lang="txt"&gt;&lt;span class="z-text z-plain"&gt;# osrel.txt
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;NAME=UKI
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;PRETTY_NAME=UKI
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;VERSION_CODENAME=1
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;ID=1
&lt;/span&gt;&lt;span class="z-text z-plain"&gt;BUILD_ID=1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have &lt;code&gt;uki_base.efi&lt;/code&gt; our shell UKI image; we now just have to fill the aforementioned sections.&lt;/p&gt;
&lt;p&gt;The composition can be done in any order using multiple calls to &lt;code&gt;objcopy&lt;/code&gt;.&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; sd_boot_stub randomize the virtual memory address (vma) so we first need to get the `IMAGE_BASE` to put the section after the base.&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; we give enough room between sections vma so they don&amp;#39;t overlap for big files&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-storage z-modifier z-shell"&gt;export&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;IMAGE_BASE&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-meta z-group z-expansion z-command z-parens z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;objdump&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;x&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;uki_base.efi&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;grep&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; ImageBase&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;awk&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;{print $2}&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; copy files into UKI section&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;objcopy&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;add-section&lt;/span&gt; .osrel=osrel.txt &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;add-section&lt;/span&gt; .cmdline=cmdline.txt &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;add-section&lt;/span&gt; .initrd=initramfs.cpio &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;add-section&lt;/span&gt; .linux=vmlinuz &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;change-section-vma&lt;/span&gt; .osrel=&lt;span class="z-meta z-group z-expansion z-command z-parens z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt; &lt;span class="z-meta z-group z-arithmetic z-shell"&gt;&lt;span class="z-punctuation z-section z-arithmetic z-begin z-shell"&gt;((&lt;/span&gt; off &lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt; &lt;span class="z-constant z-numeric z-integer z-other z-shell"&gt;&lt;span class="z-punctuation z-definition z-numeric z-base z-shell"&gt;16#&lt;/span&gt;00020000&lt;/span&gt; &lt;span class="z-keyword z-operator z-arithmetic z-shell"&gt;+&lt;/span&gt; &lt;span class="z-constant z-numeric z-integer z-decimal z-shell"&gt;16&lt;/span&gt;#&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;IMAGE_BASE&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-section z-arithmetic z-end z-shell"&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-printf z-shell"&gt;printf&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; 0x&lt;span class="z-meta z-group z-expansion z-job z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-job z-shell"&gt;%&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;x&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;off&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;change-section-vma&lt;/span&gt; .cmdline=&lt;span class="z-meta z-group z-expansion z-command z-parens z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt; &lt;span class="z-meta z-group z-arithmetic z-shell"&gt;&lt;span class="z-punctuation z-section z-arithmetic z-begin z-shell"&gt;((&lt;/span&gt; off &lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt; &lt;span class="z-constant z-numeric z-integer z-other z-shell"&gt;&lt;span class="z-punctuation z-definition z-numeric z-base z-shell"&gt;16#&lt;/span&gt;00020200&lt;/span&gt; &lt;span class="z-keyword z-operator z-arithmetic z-shell"&gt;+&lt;/span&gt; &lt;span class="z-constant z-numeric z-integer z-decimal z-shell"&gt;16&lt;/span&gt;#&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;IMAGE_BASE&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-section z-arithmetic z-end z-shell"&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-printf z-shell"&gt;printf&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; 0x&lt;span class="z-meta z-group z-expansion z-job z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-job z-shell"&gt;%&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;x&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;off&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;change-section-vma&lt;/span&gt; .initrd=&lt;span class="z-meta z-group z-expansion z-command z-parens z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt; &lt;span class="z-meta z-group z-arithmetic z-shell"&gt;&lt;span class="z-punctuation z-section z-arithmetic z-begin z-shell"&gt;((&lt;/span&gt; off &lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt; &lt;span class="z-constant z-numeric z-integer z-other z-shell"&gt;&lt;span class="z-punctuation z-definition z-numeric z-base z-shell"&gt;16#&lt;/span&gt;00100000&lt;/span&gt; &lt;span class="z-keyword z-operator z-arithmetic z-shell"&gt;+&lt;/span&gt; &lt;span class="z-constant z-numeric z-integer z-decimal z-shell"&gt;16&lt;/span&gt;#&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;IMAGE_BASE&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-section z-arithmetic z-end z-shell"&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-printf z-shell"&gt;printf&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; 0x&lt;span class="z-meta z-group z-expansion z-job z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-job z-shell"&gt;%&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;x&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;off&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;change-section-vma&lt;/span&gt; .linux=&lt;span class="z-meta z-group z-expansion z-command z-parens z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt; &lt;span class="z-meta z-group z-arithmetic z-shell"&gt;&lt;span class="z-punctuation z-section z-arithmetic z-begin z-shell"&gt;((&lt;/span&gt; off &lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt; &lt;span class="z-constant z-numeric z-integer z-other z-shell"&gt;&lt;span class="z-punctuation z-definition z-numeric z-base z-shell"&gt;16#&lt;/span&gt;02000000&lt;/span&gt; &lt;span class="z-keyword z-operator z-arithmetic z-shell"&gt;+&lt;/span&gt; &lt;span class="z-constant z-numeric z-integer z-decimal z-shell"&gt;16&lt;/span&gt;#&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;IMAGE_BASE&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-section z-arithmetic z-end z-shell"&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-printf z-shell"&gt;printf&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; 0x&lt;span class="z-meta z-group z-expansion z-job z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-job z-shell"&gt;%&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;x&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;off&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;set-section-flags&lt;/span&gt; .linux=code,readonly &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; uki_base.efi bootx64.efi&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="test-with-qemu"&gt;&lt;a class="zola-anchor" href="#test-with-qemu" aria-label="Anchor link for: test-with-qemu"&gt;Test with Qemu&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Create a directory and file &lt;code&gt;efi/boot/bootx64.efi&lt;/code&gt;&lt;sup class="footnote-reference" id="fr-3-1"&gt;&lt;a href="#fn-3"&gt;3&lt;/a&gt;&lt;/sup&gt;, then run Qemu:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;mkdir&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;p&lt;/span&gt; efi/boot&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;cp&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; bootx64.efi efi/boot/&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;qemu-system-x86_64&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;m&lt;/span&gt; 512M&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;enable-kvm&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;nographic&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;bios&lt;/span&gt; /usr/share/ovmf/OVMF.fd&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;cpu&lt;/span&gt; host&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;drive&lt;/span&gt; file=fat:rw:./,format=raw&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;iframe loading="lazy" width="656" height="443" class="center" frameborder="0" type="text&amp;#x2F;svg+xml" src="&amp;#x2F;posts&amp;#x2F;uki&amp;#x2F;uki.term.svg" data-display-frame="600" &gt;&lt;/iframe&gt;
&lt;h1 id="conclusion"&gt;&lt;a class="zola-anchor" href="#conclusion" aria-label="Anchor link for: conclusion"&gt;Conclusion&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;We created a single UKI file that contains a kernel, initramfs, cmdline, and metadata. It is easy to distribute and boot with any UEFI-compatible BIOS of the same architecture. We can imagine giving the UKI to U-Boot or iPXE to boot it in even more environments.&lt;/p&gt;
&lt;p&gt;Next time, we will see how to sign the UKI so it works with secure boot.&lt;/p&gt;
&lt;section class="footnotes"&gt;
&lt;ol class="footnotes-list"&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;Found this usage of curl + xmllint &lt;a rel="noopener" target="_blank" href="https://www.joshmcarthur.com/til/2018/06/19/extracting-xml-data-with-curl-and-xmllint.html"&gt;here&lt;/a&gt; &lt;a href="#fr-1-1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-2"&gt;
&lt;p&gt;More sections can be found in &lt;a rel="noopener" target="_blank" href="https://www.freedesktop.org/software/systemd/man/latest/ukify.html#%5BUKI%5D%20section"&gt;ukify manpage&lt;/a&gt;. &lt;a href="#fr-2-1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-3"&gt;
&lt;p&gt;A FAT partition with a file &lt;code&gt;efi/boot/bootx64.efi&lt;/code&gt; will be booted automatically by most UEFI implementations. The file suffix depends on the target CPU architecture. &lt;a href="#fr-3-1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</content></entry><entry xml:lang="en"><title>Edk2 Boot 0000</title><published>2024-05-20T00:00:00+00:00</published><updated>2024-05-20T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/edk2boot0000/"/><id>/posts/edk2boot0000/</id><content type="html" xml:base="/posts/edk2boot0000/">&lt;h1 id="edk2"&gt;&lt;a class="zola-anchor" href="#edk2" aria-label="Anchor link for: edk2"&gt;Edk2&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener" target="_blank" href="https://github.com/tianocore/edk2"&gt;Edk2&lt;/a&gt; is the official UEFI implementation.
One problem I encountered is that it doesn't provide a way to specify the default boot entry.&lt;/p&gt;
&lt;p&gt;If you already know what the default boot device or application should be, then it should be
possible to set it in the 'to be flashed' file.&lt;/p&gt;
&lt;p&gt;Here I made a patch that add a PCD option to choose which entry will be &lt;code&gt;Boot0000&lt;/code&gt;,
hence it will be booted first if no other value has been set in the &lt;code&gt;NVStore&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id="compile-edk2"&gt;&lt;a class="zola-anchor" href="#compile-edk2" aria-label="Anchor link for: compile-edk2"&gt;Compile EDK2&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;See &lt;a rel="noopener" target="_blank" href="https://github.com/tianocore/tianocore.github.io/wiki/Getting-Started-with-EDK-II"&gt;Getting Started with EDK II&lt;/a&gt; for complete compilation steps.&lt;/p&gt;
&lt;p&gt;It boils down to the following:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; Download edk2 source&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;git&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; clone &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;filter&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-option z-shell"&gt;=&lt;/span&gt;tree:0&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;single-branch&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;depth&lt;/span&gt; 1 &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;recurse-submodules&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;shallow-submodules&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;branch&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;EDK2_VERSION&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;:-&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;edk2-stable202308&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;https://github.com/tianocore/edk2.git&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;edk2&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-cd z-shell"&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;edk2&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;make&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;j&lt;/span&gt; 4&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;C&lt;/span&gt; BaseTools Source/C&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;make&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;j&lt;/span&gt; 4&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;C&lt;/span&gt; BaseTools Source/Python&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;mkdir&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;p&lt;/span&gt; edk2build&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-storage z-modifier z-shell"&gt;export&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;WORKSPACE&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;PWD&lt;/span&gt;&lt;/span&gt;/edk2build&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-storage z-modifier z-shell"&gt;export&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;PACKAGES_PATH&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;PWD&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-source z-shell"&gt;source&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; edksetup.sh&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now our shell is setup with edk2 environment and we can build UEFI firmwares.
But first, we'll add the patch.&lt;/p&gt;
&lt;h1 id="apply-the-patch"&gt;&lt;a class="zola-anchor" href="#apply-the-patch" aria-label="Anchor link for: apply-the-patch"&gt;Apply the patch&lt;/a&gt;&lt;/h1&gt;
&lt;details&gt;
&lt;summary&gt;
It can also be found in the form of a &lt;a rel="noopener" target="_blank" href="https://github.com/tianocore/edk2/pull/5396"&gt;pull request&lt;/a&gt;
&lt;/summary&gt;
&lt;div&gt;
&lt;pre data-lang="diff" class="language-diff z-code"&gt;&lt;code class="language-diff" data-lang="diff"&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-meta z-separator z-diff"&gt;&lt;span class="z-punctuation z-definition z-separator z-diff"&gt;---&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;diff --git MdeModulePkg/MdeModulePkg.dec MdeModulePkg/MdeModulePkg.dec
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;index 0ff058b0..6ee074c3 100644
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-meta z-diff z-header z-from-file"&gt;&lt;span class="z-meta z-header z-from-file z-diff"&gt;&lt;span class="z-punctuation z-definition z-from-file z-diff"&gt;---&lt;/span&gt; MdeModulePkg/MdeModulePkg.dec
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-meta z-diff z-header z-to-file"&gt;&lt;span class="z-meta z-header z-to-file z-diff"&gt;&lt;span class="z-punctuation z-definition z-to-file z-diff"&gt;+++&lt;/span&gt; MdeModulePkg/MdeModulePkg.dec
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-meta z-diff z-range z-unified"&gt;&lt;span class="z-meta z-range z-unified z-diff"&gt;&lt;span class="z-punctuation z-definition z-range z-diff"&gt;@@&lt;/span&gt; &lt;span class="z-meta z-toc-list z-line-number z-diff"&gt;-2151,6 +2151,10&lt;/span&gt; &lt;span class="z-punctuation z-definition z-range z-diff"&gt;@@&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt; # @Prompt The value is use for Usb Network rate limiting supported.
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; gEfiMdeModulePkgTokenSpaceGuid.PcdUsbNetworkRateLimitingFactor|100|UINT32|0x10000028
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; ## Indicate the first boot entry, does not set bootorder
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; # @Prompt First boot entry.
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; gEfiMdeModulePkgTokenSpaceGuid.PcdPlatformBootBoot0000|L&amp;quot;&amp;quot;|VOID*|0x0000012e
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt; [PcdsPatchableInModule]
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; ## Specify memory size with page number for PEI code when
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; # Loading Module at Fixed Address feature is enabled.
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;diff --git MdeModulePkg/Universal/BdsDxe/BdsDxe.inf MdeModulePkg/Universal/BdsDxe/BdsDxe.inf
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;index 5bac635d..557c2361 100644
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-meta z-diff z-header z-from-file"&gt;&lt;span class="z-meta z-header z-from-file z-diff"&gt;&lt;span class="z-punctuation z-definition z-from-file z-diff"&gt;---&lt;/span&gt; MdeModulePkg/Universal/BdsDxe/BdsDxe.inf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-meta z-diff z-header z-to-file"&gt;&lt;span class="z-meta z-header z-to-file z-diff"&gt;&lt;span class="z-punctuation z-definition z-to-file z-diff"&gt;+++&lt;/span&gt; MdeModulePkg/Universal/BdsDxe/BdsDxe.inf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-meta z-diff z-range z-unified"&gt;&lt;span class="z-meta z-range z-unified z-diff"&gt;&lt;span class="z-punctuation z-definition z-range z-diff"&gt;@@&lt;/span&gt; &lt;span class="z-meta z-toc-list z-line-number z-diff"&gt;-98,6 +98,7&lt;/span&gt; &lt;span class="z-punctuation z-definition z-range z-diff"&gt;@@&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt; gEfiMdeModulePkgTokenSpaceGuid.PcdTestKeyUsed ## CONSUMES
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; gEfiMdeModulePkgTokenSpaceGuid.PcdCapsuleOnDiskSupport ## CONSUMES
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; gEfiMdeModulePkgTokenSpaceGuid.PcdPlatformRecoverySupport ## CONSUMES
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; gEfiMdeModulePkgTokenSpaceGuid.PcdPlatformBootBoot0000 ## CONSUMES
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; [Depex]
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; TRUE
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;diff --git MdeModulePkg/Universal/BdsDxe/BdsEntry.c MdeModulePkg/Universal/BdsDxe/BdsEntry.c
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;index 72de8d32..dc773513 100644
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-meta z-diff z-header z-from-file"&gt;&lt;span class="z-meta z-header z-from-file z-diff"&gt;&lt;span class="z-punctuation z-definition z-from-file z-diff"&gt;---&lt;/span&gt; MdeModulePkg/Universal/BdsDxe/BdsEntry.c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-meta z-diff z-header z-to-file"&gt;&lt;span class="z-meta z-header z-to-file z-diff"&gt;&lt;span class="z-punctuation z-definition z-to-file z-diff"&gt;+++&lt;/span&gt; MdeModulePkg/Universal/BdsDxe/BdsEntry.c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-meta z-diff z-range z-unified"&gt;&lt;span class="z-meta z-range z-unified z-diff"&gt;&lt;span class="z-punctuation z-definition z-range z-diff"&gt;@@&lt;/span&gt; &lt;span class="z-meta z-toc-list z-line-number z-diff"&gt;-692,6 +692,9&lt;/span&gt; &lt;span class="z-punctuation z-definition z-range z-diff"&gt;@@&lt;/span&gt; &lt;span class="z-entity z-name z-section z-diff"&gt;BdsEntry (&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt; EFI_STATUS BootManagerMenuStatus;
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; EFI_BOOT_MANAGER_LOAD_OPTION PlatformDefaultBootOption;
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; BOOLEAN PlatformDefaultBootOptionValid;
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; EFI_BOOT_MANAGER_LOAD_OPTION PlatformDefaultBoot0000;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; BOOLEAN PlatformDefaultBoot0000Valid;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; CONST CHAR16 *Boot0000;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; HotkeyTriggered = NULL;
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; Status = EFI_SUCCESS;
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-meta z-diff z-range z-unified"&gt;&lt;span class="z-meta z-range z-unified z-diff"&gt;&lt;span class="z-punctuation z-definition z-range z-diff"&gt;@@&lt;/span&gt; &lt;span class="z-meta z-toc-list z-line-number z-diff"&gt;-799,6 +802,35&lt;/span&gt; &lt;span class="z-punctuation z-definition z-range z-diff"&gt;@@&lt;/span&gt; &lt;span class="z-entity z-name z-section z-diff"&gt;BdsEntry (&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt; BootNext = NULL;
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; }
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; Boot0000 = ((CONST CHAR16 *)PcdGetPtr (PcdPlatformBootBoot0000));
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; if (Boot0000 &amp;amp;&amp;amp; (*Boot0000 != L&amp;#39;\0&amp;#39;)) {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; FilePath = ConvertTextToDevicePath (Boot0000);
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; if (FilePath == NULL) {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; DEBUG ((DEBUG_ERROR, &amp;quot;Fail to allocate memory for default boot file path. Unable to boot.\n&amp;quot;));
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; CpuDeadLoop ();
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; PlatformDefaultBoot0000Valid = EfiBootManagerInitializeLoadOption (
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; &amp;amp;PlatformDefaultBoot0000,
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; 0,
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; LoadOptionTypeBoot,
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; LOAD_OPTION_ACTIVE,
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; L&amp;quot;Default PlatformBoot&amp;quot;,
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; FilePath,
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; 0
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; ) == EFI_SUCCESS;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; DEBUG ((DEBUG_ERROR, &amp;quot;%d\n&amp;quot;, PlatformDefaultBoot0000Valid));
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; ASSERT (PlatformDefaultBoot0000Valid == TRUE);
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; if (PlatformDefaultBoot0000Valid) {
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; EfiBootManagerLoadOptionToVariable (&amp;amp;PlatformDefaultBoot0000);
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; EfiBootManagerFreeLoadOption (&amp;amp;PlatformDefaultBoot0000);
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; FreePool (FilePath);
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-inserted z-diff"&gt;&lt;span class="z-punctuation z-definition z-inserted z-diff"&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt; //
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; // Initialize the platform language variables
&lt;/span&gt;&lt;span class="z-source z-diff"&gt; //
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;&lt;span class="z-markup z-deleted z-diff"&gt;&lt;span class="z-punctuation z-definition z-deleted z-diff"&gt;-&lt;/span&gt;-
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-diff"&gt;2.43.0
&lt;/span&gt;&lt;span class="z-source z-diff"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;Edk2 source code has CRLF line endings and has whitespace-only lines, which can confuse the patch command.
However, git apply works fine.&lt;/p&gt;
&lt;p&gt;In edk2 source code:
&lt;code&gt;git apply --ignore-whitespace -p0 Pcd-boot0000.patch&lt;/code&gt;&lt;/p&gt;
&lt;h1 id="build-a-firmware"&gt;&lt;a class="zola-anchor" href="#build-a-firmware" aria-label="Anchor link for: build-a-firmware"&gt;Build a firmware&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;With the patch applied edk2 accepts a new configuration key &lt;code&gt;gEfiMdeModulePkgTokenSpaceGuid.PcdPlatformBootBoot0000&lt;/code&gt;,
which takes an &lt;code&gt;UTF-16&lt;/code&gt; string.&lt;/p&gt;
&lt;p&gt;To enter the correct value, we need first to find our firmware GUID and the application GUID:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;find&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;name&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;OvmfPkgX64.fdf&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;exec&lt;/span&gt; grep FvNameGuid &lt;span class="z-meta z-group z-expansion z-brace z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-brace z-begin z-shell"&gt;{&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-brace z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class="z-constant z-character z-escape z-shell"&gt;\;&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; Fv&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;grep&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; FILE_GUID ShellPkg/Application/Shell/Shell.inf &lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; FvFile&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is then possible to choose the default boot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Fv(7CB8BDC9-F8EB-4F34-AAEA-3EE4AF6516A1)/FvFile(7C04A583-9E3E-4f1c-AD65-E05268D0B4D1)&lt;/code&gt; boots into shell&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Fv(7CB8BDC9-F8EB-4F34-AAEA-3EE4AF6516A1)/FvFile(462CAA21-7614-4503-836E-8AB6F4662331)&lt;/code&gt; boots into uefi manager&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It uses &lt;code&gt;EfiDevicePathProtocol&lt;/code&gt; under the hood, you can guess more boot options from these files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel="noopener" target="_blank" href="https://github.com/tianocore/edk2/blob/master/MdePkg/Include/Protocol/DevicePath.h"&gt;DevicePath.h&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel="noopener" target="_blank" href="https://github.com/tianocore/edk2/blob/master/MdePkg/Library/UefiDevicePathLib/DevicePathFromText.c"&gt;DevicePathFromText.c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel="noopener" target="_blank" href="https://github.com/tianocore/edk2/blob/master/MdePkg/Library/UefiDevicePathLib/DevicePathToText.c"&gt;DevicePathToText.c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote class="note"&gt;
&lt;p class="box-title"&gt;
&lt;i class="icon"&gt;&lt;/i&gt;note&lt;/p&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;p&gt;Anything that is recognized as a filesystem by edk2 can be booted directly with its path (&lt;code&gt;/EFI/BOOT/grub.efi&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;Firmware memory can be mapped as a filesystem with &lt;code&gt;LoadFileOnFv2&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Anyway, let's build:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-storage z-modifier z-shell"&gt;export&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;BOOT0000&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;Fv(7CB8BDC9-F8EB-4F34-AAEA-3EE4AF6516A1)/FvFile(462CAA21-7614-4503-836E-8AB6F4662331)&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;build&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;t&lt;/span&gt; GCC5 &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;buildtarget&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-option z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;RELEASE&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;arch&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-option z-shell"&gt;=&lt;/span&gt;X64 &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;platform&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-option z-shell"&gt;=&lt;/span&gt;OvmfPkg/OvmfPkgX64.dsc &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;pcd&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-option z-shell"&gt;=&lt;/span&gt;gEfiMdeModulePkgTokenSpaceGuid.PcdPlatformBootBoot0000=&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;L&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;BOOT0000&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; `L` prefix to convert to UTF-16&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="test-with-qemu"&gt;&lt;a class="zola-anchor" href="#test-with-qemu" aria-label="Anchor link for: test-with-qemu"&gt;Test with QEMU&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;qemu-system-x86_64 -m 64M -enable-kvm -nographic -drive if=pflash,file="$(find -name OVMF.fd)",format=raw,readonly=on&lt;/code&gt;&lt;/p&gt;
&lt;iframe loading="lazy" width="656" height="443" class="center" frameborder="0" type="text&amp;#x2F;svg+xml" src="&amp;#x2F;posts&amp;#x2F;edk2boot0000&amp;#x2F;term.svg" data-display-frame="386" &gt;&lt;/iframe&gt;
&lt;p&gt;It's good to know that QEMU will automatically create an NVStore for the firmware to use and will automatically set a BootOrder. This can be configured using &lt;a rel="noopener" target="_blank" href="https://www.qemu.org/docs/master/specs/fw_cfg.html"&gt;fw_cfg&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="alternative"&gt;&lt;a class="zola-anchor" href="#alternative" aria-label="Anchor link for: alternative"&gt;Alternative&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;If you intend to flash the target device's NVRAM, you can achieve the same result with &lt;code&gt;virt-fw-vars&lt;/code&gt;, see this &lt;a rel="noopener" target="_blank" href="https://stackoverflow.com/a/76471402"&gt;stackoverflow post&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h1 id="conclusion"&gt;&lt;a class="zola-anchor" href="#conclusion" aria-label="Anchor link for: conclusion"&gt;Conclusion&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Now you can choose the default boot at the compilation step and before the first boot without touching the &lt;code&gt;NVStore&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;That's all, good day!&lt;/p&gt;</content></entry><entry xml:lang="en"><title>Qemu IPv6 Slirp</title><published>2024-04-12T00:00:00+00:00</published><updated>2024-04-12T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/qemuipv6slirp/"/><id>/posts/qemuipv6slirp/</id><content type="html" xml:base="/posts/qemuipv6slirp/">&lt;p&gt;Qemu support rootless mode routing of network packets through the host using &lt;a rel="noopener" target="_blank" href="https://en.wikipedia.org/wiki/Slirp"&gt;Slirp&lt;/a&gt;,
you only need to give the right options to qemu to set this up, without having to tinker with tap interfaces or iptables.&lt;/p&gt;
&lt;p&gt;However, using it for IPv6 can be a bit more challenging, especially since the &lt;a rel="noopener" target="_blank" href="https://wiki.qemu.org/Documentation/Networking"&gt;documentation&lt;/a&gt; lacks IPv6 examples.&lt;/p&gt;
&lt;p&gt;The Qemu options look like this &lt;code&gt;-device virtio-net-pci,netdev=n0,mac=52:54:12:34:56:00 -netdev user,id=n0,ipv4=off,ipv6=on,ipv6-net=??&lt;/code&gt;. The only unknown is what to put for &lt;code&gt;ipv6-net&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;One would guess that using a &lt;a rel="noopener" target="_blank" href="https://en.wikipedia.org/wiki/IPv6_address#Special_addresses"&gt;Unique Local Address&lt;/a&gt; would work, but Qemu will only route packets out of the guest for IPs in the specified network.&lt;/p&gt;
&lt;p&gt;The trick is to give &lt;code&gt;::/0&lt;/code&gt; for the network, this way Qemu will route everything out of the guest.&lt;/p&gt;
&lt;h1 id="test"&gt;&lt;a class="zola-anchor" href="#test" aria-label="Anchor link for: test"&gt;Test&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;We download an &lt;a rel="noopener" target="_blank" href="https://cloud-images.ubuntu.com/jammy/current/"&gt;Ubuntu cloud image&lt;/a&gt;, mask systemd-networkd-wait-online and change the root password with libguestfs&lt;sup class="footnote-reference" id="fr-1-1"&gt;&lt;a href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;pre data-lang="sh" class="language-sh z-code"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;virt-customize&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;a&lt;/span&gt; jammy-server-cloudimg-amd64-disk-kvm.img&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;run-command&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;systemctl mask systemd-networkd-wait-online.service&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;virt-customize&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;a&lt;/span&gt; jammy-server-cloudimg-amd64-disk-kvm.img&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; --&lt;/span&gt;root-password&lt;/span&gt; password:root&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we run:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;qemu-system-&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOSTTYPE&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;m&lt;/span&gt; 2G&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;nographic&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;serial&lt;/span&gt; mon:stdio&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;nodefaults&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;enable-kvm&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;drive&lt;/span&gt; file=jammy-server-cloudimg-amd64-disk-kvm.img,format=qcow2&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;device&lt;/span&gt; virtio-net-pci,netdev=n0,mac=52:54:12:34:56:00&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;netdev&lt;/span&gt; user,id=n0,ipv4=off,ipv6=on,ipv6-net=::/0 &lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; Press CTRL+a CTRL+x to quit qemu&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Setup network in guest:&lt;/p&gt;
&lt;pre data-lang="tty" class="language-tty z-code"&gt;&lt;code class="language-tty" data-lang="tty"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;root@ubuntu:~#&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;ip&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;link&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;set&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;ens2&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;up&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-shell"&gt;#&lt;/span&gt; Bring iface up
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;root@ubuntu:~#&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;echo&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;nameserver 2606:4700:4700::1111&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;/etc/resolv.conf&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-shell"&gt;#&lt;/span&gt; use cloudflare DNS
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We get an IPv6 and route are configured:&lt;/p&gt;
&lt;pre data-lang="tty" class="language-tty z-code"&gt;&lt;code class="language-tty" data-lang="tty"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;root@ubuntu:~#&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;ip&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-parameter z-option z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;6&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-parameter z-option z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;--&lt;/span&gt;brief&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-shell"&gt;#&lt;/span&gt; we get an ipv6
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;lo&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;UNKNOWN&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;::1/128&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;ens2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;UP&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;::5054:12ff:fe34:5600/64&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;fe80::5054:12ff:fe34:5600/64&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;root@ubuntu:~#&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;ip&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-parameter z-option z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;6&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;::1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;dev&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;lo&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;proto&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;kernel&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;metric&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-number z-integer z-decimal z-shell"&gt;&lt;span class="z-constant z-numeric z-value z-shell"&gt;256&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;pref&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;medium&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;::&lt;span class="z-punctuation z-separator z-path z-shell"&gt;/&lt;/span&gt;64&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;dev&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;ens2&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;proto&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;kernel&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;metric&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-number z-integer z-decimal z-shell"&gt;&lt;span class="z-constant z-numeric z-value z-shell"&gt;256&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;expires&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;86274sec&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;pref&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;medium&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;fe80::&lt;span class="z-punctuation z-separator z-path z-shell"&gt;/&lt;/span&gt;64&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;dev&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;ens2&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;proto&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;kernel&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;metric&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-number z-integer z-decimal z-shell"&gt;&lt;span class="z-constant z-numeric z-value z-shell"&gt;256&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;pref&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;medium&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;default&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;via&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;fe80::2&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;dev&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;ens2&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;proto&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;ra&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;metric&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-number z-integer z-decimal z-shell"&gt;&lt;span class="z-constant z-numeric z-value z-shell"&gt;1024&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;expires&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;1674sec&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;hoplimit&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-number z-integer z-decimal z-shell"&gt;&lt;span class="z-constant z-numeric z-value z-shell"&gt;64&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;pref&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;medium&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ping doesn't work&lt;sup class="footnote-reference" id="fr-2-1"&gt;&lt;a href="#fn-2"&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;pre data-lang="tty" class="language-tty z-code"&gt;&lt;code class="language-tty" data-lang="tty"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;root@ubuntu:~#&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;ping&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;google.com&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;PING&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;google.com&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;(par21s23-in-x0e.1e100.net&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;(2a00:1450:4007:81a::200e&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-invalid z-illegal z-stray z-shell"&gt;)&lt;/span&gt;&lt;span class="z-invalid z-illegal z-stray z-shell"&gt;)&lt;/span&gt; &lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;56&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;data&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;bytes&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;qemu-system-x86_64:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;Slirp:&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;external&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;icmpv6&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;not&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;supported&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;yet&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But curl does:&lt;/p&gt;
&lt;pre data-lang="tty" class="language-tty z-code"&gt;&lt;code class="language-tty" data-lang="tty"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;root@ubuntu:~#&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;curl&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-parameter z-option z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;v&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;ifconfig.me&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;&lt;span class="z-constant z-other z-wildcard z-asterisk z-shell"&gt;*&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;Trying&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;2600:1901:0:bbc3:::80...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;&lt;span class="z-constant z-other z-wildcard z-asterisk z-shell"&gt;*&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;Connected&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;ifconfig.me&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;(2600:1901:0:bbc3::&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-invalid z-illegal z-stray z-shell"&gt;)&lt;/span&gt; &lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;port&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-number z-integer z-decimal z-shell"&gt;&lt;span class="z-constant z-numeric z-value z-shell"&gt;80&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;/span&gt;&lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;(#0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-invalid z-illegal z-stray z-shell"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;GET&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;&lt;span class="z-punctuation z-separator z-path z-shell"&gt;/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;HTTP/1.1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;Host:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;ifconfig.me&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;User-Agent:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;curl&lt;span class="z-punctuation z-separator z-path z-shell"&gt;/&lt;/span&gt;7.81.0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;Accept:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;&lt;span class="z-constant z-other z-wildcard z-asterisk z-shell"&gt;*&lt;/span&gt;&lt;span class="z-punctuation z-separator z-path z-shell"&gt;/&lt;/span&gt;&lt;span class="z-constant z-other z-wildcard z-asterisk z-shell"&gt;*&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;&lt;span class="z-constant z-other z-wildcard z-asterisk z-shell"&gt;*&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;Mark&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;bundle&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;as&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;not&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;supporting&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;multiuse&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;lt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;HTTP/1.1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;200&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;OK&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;lt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;server:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;fasthttp&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;lt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;date:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;Thu,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-number z-integer z-decimal z-shell"&gt;&lt;span class="z-constant z-numeric z-value z-shell"&gt;11&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;Apr&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-number z-integer z-decimal z-shell"&gt;&lt;span class="z-constant z-numeric z-value z-shell"&gt;2024&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;08:16:58&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;GMT&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;lt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;content-type:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;text&lt;span class="z-punctuation z-separator z-path z-shell"&gt;/&lt;/span&gt;plain&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;lt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;Content-Length:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;38&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;lt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;access-control-allow-origin:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;&lt;span class="z-constant z-other z-wildcard z-asterisk z-shell"&gt;*&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;lt;&lt;/span&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;via:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-meta z-function-call z-identifier z-shell"&gt;&lt;span class="z-meta z-command z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;1.1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;google&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;lt;&lt;/span&gt;&lt;span class="z-meta z-string z-glob z-shell"&gt;&lt;span class="z-string z-unquoted z-shell"&gt;redacted-ip6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-redirection z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-shell"&gt;#&lt;/span&gt; Slirp translated host ip6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After bringing up the iface, we get an ip on &lt;code&gt;::/0&lt;/code&gt;, we use cloudflare nameserver and can use curl to get our IPv6.&lt;/p&gt;
&lt;p&gt;We end up with the host IPv6 because it goes trough Slirp.&lt;/p&gt;
&lt;h1 id="debug"&gt;&lt;a class="zola-anchor" href="#debug" aria-label="Anchor link for: debug"&gt;Debug&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;You can also add &lt;code&gt;-object filter-dump,id=d0,netdev=n0,file=dump.pcap&lt;/code&gt; to get a pcap file of the VM network.&lt;/p&gt;
&lt;p&gt;That's all for today, have fun with IPv6.&lt;/p&gt;
&lt;section class="footnotes"&gt;
&lt;ol class="footnotes-list"&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;Despite my best efforts, I couldn't make cloud-init work. Maybe it could have its own blog post, but today we're only interested in the Qemu IPv6 Slirp stack. &lt;a href="#fr-1-1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-2"&gt;
&lt;p&gt;&lt;a rel="noopener" target="_blank" href="https://github.com/qemu/libslirp/blob/v4.7.0/src/ip6_icmp.c#L419"&gt;https://github.com/qemu/libslirp/blob/v4.7.0/src/ip6_icmp.c#L419&lt;/a&gt;. &lt;a href="#fr-2-1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</content></entry><entry xml:lang="en"><title>Snap 2 Flatpak</title><published>2024-03-11T00:00:00+00:00</published><updated>2024-03-11T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/snap2flatpak/"/><id>/posts/snap2flatpak/</id><content type="html" xml:base="/posts/snap2flatpak/">&lt;p&gt;Sometimes, I want to use closed-source applications on Linux. While I can usually find a &lt;code&gt;Flatpak&lt;/code&gt; version,
sometimes only a &lt;code&gt;Snap&lt;/code&gt; package is available.&lt;/p&gt;
&lt;p&gt;For such cases, I've created a simple script &lt;a rel="noopener" target="_blank" href="https://github.com/izissise/snap2flatpak/tree/main"&gt;https://github.com/izissise/snap2flatpak&lt;/a&gt;. It automatically downloads the Snap archive from the Ubuntu server and repacks it as a Flatpak.&lt;/p&gt;
&lt;p&gt;I haven't tested it with many apps, so you might need to tweak it, especially to choose the correct Flatpak runtime.&lt;/p&gt;</content></entry><entry xml:lang="en"><title>Binary Patching KWin for 3-Finger Overview Gesture</title><published>2024-03-09T00:00:00+00:00</published><updated>2024-03-09T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/kwin-gesture-patch/"/><id>/posts/kwin-gesture-patch/</id><content type="html" xml:base="/posts/kwin-gesture-patch/">&lt;p&gt;TLDR: &lt;a href="/posts/kwin-gesture-patch/#patching"&gt;Go to patching&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="plasma-6"&gt;&lt;a class="zola-anchor" href="#plasma-6" aria-label="Anchor link for: plasma-6"&gt;Plasma 6&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I recently updated to &lt;a rel="noopener" target="_blank" href="https://neon.kde.org/"&gt;Kde Plasma 6&lt;/a&gt;, and it's great except for one minor annoyance: the overview effect is triggered on the touchpad with a 4-finger swipe, and I'd prefer to trigger it with a 3-finger swipe instead.&lt;/p&gt;
&lt;p&gt;Problem is, the value is &lt;a rel="noopener" target="_blank" href="https://invent.kde.org/plasma/kwin/-/blob/master/src/plugins/overview/overvieweffect.cpp#L36"&gt;hardcoded in the C++ code&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There is an &lt;a rel="noopener" target="_blank" href="https://bugs.kde.org/show_bug.cgi?id=402857"&gt;issue about making it configurable&lt;/a&gt; but without someone assigned to it. If you want to help implement it, you can &lt;a rel="noopener" target="_blank" href="https://community.kde.org/Get_Involved"&gt;get involved&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Today, I want an easy win, and it seems easy enough to patch the binary, so let's try.&lt;/p&gt;
&lt;h1 id="analysis"&gt;&lt;a class="zola-anchor" href="#analysis" aria-label="Anchor link for: analysis"&gt;Analysis&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Using &lt;code&gt;objdump -D /usr/bin/kwin_wayland | grep -i touchpad&lt;/code&gt; we can find that the method &lt;code&gt;addTouchpadSwipeGesture&lt;/code&gt;
is indeed in the &lt;code&gt;kwin_wayland&lt;/code&gt; binary with the mangled name &lt;code&gt;_ZN4KWin22EffectTogglableGesture23addTouchpadSwipeGestureENS_14SwipeDirectionEj&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We find exactly 3 calls to it, corresponding to the source code.&lt;/p&gt;
&lt;p&gt;We want to keep the hex representation of the instructions that make up the call, specifically the hex of the 3 &lt;code&gt;mov&lt;/code&gt; instructions before the &lt;code&gt;call&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With:&lt;/p&gt;
&lt;pre class="z-code"&gt;&lt;code&gt;&lt;span class="z-text z-plain"&gt; d7b58: 48 89 ef mov %rbp,%rdi
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; d7b5b: ba 04 00 00 00 mov $0x4,%edx
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; d7b60: be 03 00 00 00 mov $0x3,%esi
&lt;/span&gt;&lt;span class="z-text z-plain"&gt; d7b65: e8 06 dd f7 ff call 55870 &amp;lt;_ZN4KWin22EffectTogglableGesture23addTouchpadSwipeGestureENS_14SwipeDirectionEj@plt&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;we want &lt;code&gt;4889efba04000000be03000000e8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;There are 2 fingerprints for the 3 calls&lt;/p&gt;
&lt;p&gt;&lt;code&gt;4889efba04000000be03000000e8&lt;/code&gt;
and
&lt;code&gt;4889efba04000000be01000000e8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To enable a 3-finger gesture, we'll replace the second parameter &lt;code&gt;4&lt;/code&gt; with &lt;code&gt;3&lt;/code&gt; in the hex:
&lt;code&gt;4889efba&lt;/code&gt;&lt;strong&gt;&lt;code&gt;03&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;000000be03000000e8&lt;/code&gt;
&lt;code&gt;4889efba&lt;/code&gt;&lt;strong&gt;&lt;code&gt;03&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;000000be01000000e8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For peace of mind, we can check that it doesn't match anything else&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;$&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; xxd&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;p&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;c&lt;/span&gt; 0 /usr/bin/kwin_wayland&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;tr&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;d&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;[:space:]&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;grep&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;Eo&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;4889efba04000000be0[3,1]000000e8&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;4889efba04000000be03000000e8&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;4889efba04000000be03000000e8&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;4889efba04000000be01000000e8&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We got 3 entries corresponding to the 3 calls so we're good!&lt;/p&gt;
&lt;h1 id="patching"&gt;&lt;a class="zola-anchor" href="#patching" aria-label="Anchor link for: patching"&gt;Patching&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Now that we have our fingerprints, we can patch the binary. To have a 3-finger gesture instead of 4, we can replace &lt;code&gt;mov $0x4,%edx&lt;/code&gt; with &lt;code&gt;mov $0x3,%edx&lt;/code&gt; using sed and xxd. Here's the process:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; backup original&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sudo&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; cp&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;a&lt;/span&gt; /usr/bin/kwin_wayland /usr/bin/kwin_wayland.bak&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; patch ba04 to ba03&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;xxd&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;p&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;c&lt;/span&gt; 0 /usr/bin/kwin_wayland&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;tr&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;d&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;[:space:]&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sed&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;s|4889efba04000000be0\(.\)000000e8|4889efba03000000be0\1000000e8|g&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;xxd&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;r&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;p&lt;/span&gt; &lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;gt;&lt;/span&gt; kwin_wayland_patched&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; replace binary&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sudo&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; mv kwin_wayland_patched /usr/bin/kwin_wayland&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-and z-shell"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sudo&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; chmod 755 /usr/bin/kwin_wayland&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-and z-shell"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sudo&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; chown root:root /usr/bin/kwin_wayland&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Edit Ubuntu 24.04:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; backup original&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sudo&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; cp&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;a&lt;/span&gt; /usr/bin/kwin_wayland /usr/bin/kwin_wayland.bak&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; patch ba04 to ba03&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;xxd&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;p&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;c&lt;/span&gt; 0 /usr/bin/kwin_wayland&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;tr&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;d&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;[:space:]&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sed&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;s|4c89e7ba04000000be0\(.\)000000e8|4c89e7ba03000000be0\1000000e8|g&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;xxd&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;r&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;p&lt;/span&gt; &lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;gt;&lt;/span&gt; kwin_wayland_patched&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; replace binary&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sudo&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; mv kwin_wayland_patched /usr/bin/kwin_wayland&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-and z-shell"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sudo&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; chmod 755 /usr/bin/kwin_wayland&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-and z-shell"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sudo&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; chown root:root /usr/bin/kwin_wayland&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Reboot and enjoy!&lt;/p&gt;</content></entry><entry xml:lang="en"><title>Video motion</title><published>2024-03-04T00:00:00+00:00</published><updated>2024-03-04T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/vidmotion/"/><id>/posts/vidmotion/</id><content type="html" xml:base="/posts/vidmotion/">&lt;p&gt;I saw the following &lt;a rel="noopener" target="_blank" href="https://www.youtube.com/watch?v=NSS6yAMZF78"&gt;youtube video&lt;/a&gt;,
I like the concept a lot but I only have &lt;code&gt;ffmpeg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the video we can make up five steps to extract the motion from a normal video&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;set opacity to 50%&lt;/li&gt;
&lt;li&gt;duplicate video&lt;/li&gt;
&lt;li&gt;inverse colors on first duplicate&lt;/li&gt;
&lt;li&gt;time shift on second duplicate&lt;/li&gt;
&lt;li&gt;overlay duplicates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After some trial and error, here's the ffmpeg command I came up with to achieve a similar effect:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;TIME_SHIFT&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;0.8&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;ffmpeg&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;nostdin&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;i&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;filter_complex&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt; [0:v] format=rgba,lutrgb=a=128 [hopa]; [hopa] split [hopa1][hopa2];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt; [hopa1] lutrgb=r=negval:g=negval:b=negval [neg];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt; [hopa2] setpts=PTS-&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;TIME_SHIFT&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;/TB [tshift];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt; [tshift][neg] overlay [out]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt; &lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-punctuation z-separator z-continuation z-line z-shell"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;map&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;[out]&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt; out.mkv&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content></entry><entry xml:lang="en"><title>Initramfs</title><published>2024-03-03T00:00:00+00:00</published><updated>2024-03-03T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/initramfs/"/><id>/posts/initramfs/</id><content type="html" xml:base="/posts/initramfs/">&lt;h1 id="linux-basic-initramfs"&gt;&lt;a class="zola-anchor" href="#linux-basic-initramfs" aria-label="Anchor link for: linux-basic-initramfs"&gt;Linux basic initramfs&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;With a compiled kernel image, it can be useful to load your own &lt;a rel="noopener" target="_blank" href="https://en.wikipedia.org/wiki/Initial_ramdisk"&gt;initramfs&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;make it as small as possible considering the features you need&lt;/li&gt;
&lt;li&gt;create a minimal test environment for the kernel image&lt;/li&gt;
&lt;li&gt;mount a remote filesystem as the root&lt;/li&gt;
&lt;li&gt;your own reason&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anyways, with the &lt;a rel="noopener" target="_blank" href="https://www.kernel.org/doc/Documentation/filesystems/ramfs-rootfs-initramfs.txt"&gt;official documentation&lt;/a&gt; help,
let's create an initramfs.&lt;/p&gt;
&lt;h1 id="tool-compilation"&gt;&lt;a class="zola-anchor" href="#tool-compilation" aria-label="Anchor link for: tool-compilation"&gt;Tool compilation&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;We need to gen_init_cpio tool that can found in the kernel repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel="noopener" target="_blank" href="https://raw.githubusercontent.com/torvalds/linux/v6.7/usr/gen_init_cpio.c"&gt;gen_init_cpio.c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;gen_init_cpio.c&lt;/code&gt; needs to be compiled:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;wget&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;O&lt;/span&gt; gen_init_cpio.c &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;https://raw.githubusercontent.com/torvalds/linux/v6.7/usr/gen_init_cpio.c&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;gcc&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;o&lt;/span&gt; gen_init_cpio gen_init_cpio.c&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now it is ready for use.&lt;/p&gt;
&lt;h1 id="init-hello-world"&gt;&lt;a class="zola-anchor" href="#init-hello-world" aria-label="Anchor link for: init-hello-world"&gt;Init hello world&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Let's create an hello world init program that the kernel can execute to show that everything works correctly:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-printf z-shell"&gt;printf&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;%s\n&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;#include &amp;lt;stdio.h&amp;gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;#include &amp;lt;unistd.h&amp;gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;int main() { printf(&amp;quot;Hello world!\n&amp;quot;); sleep(999999999); }&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;gcc&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;fpic&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;static&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;xc&lt;/span&gt; -&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;o&lt;/span&gt; init&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="basic-initramfs"&gt;&lt;a class="zola-anchor" href="#basic-initramfs" aria-label="Anchor link for: basic-initramfs"&gt;Basic Initramfs&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Here is a basic initramfs description, we give it to &lt;code&gt;gen_init_cpio&lt;/code&gt; directly:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;./gen_init_cpio&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;t&lt;/span&gt; 0&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;c&lt;/span&gt; - &lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;gt;&lt;/span&gt; initramfs.cpio &lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;&lt;span class="z-keyword z-operator z-assignment z-redirection z-shell"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="z-keyword z-control z-heredoc-token z-shell"&gt;EOF&lt;/span&gt;&lt;/span&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# this is a file containing newline separated entries that
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# describe the files to be included in the initramfs archive:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# # a comment
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# file &amp;lt;name&amp;gt; &amp;lt;location&amp;gt; &amp;lt;mode&amp;gt; &amp;lt;uid&amp;gt; &amp;lt;gid&amp;gt; [&amp;lt;hard links&amp;gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# dir &amp;lt;name&amp;gt; &amp;lt;mode&amp;gt; &amp;lt;uid&amp;gt; &amp;lt;gid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# nod &amp;lt;name&amp;gt; &amp;lt;mode&amp;gt; &amp;lt;uid&amp;gt; &amp;lt;gid&amp;gt; &amp;lt;dev_type&amp;gt; &amp;lt;maj&amp;gt; &amp;lt;min&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# slink &amp;lt;name&amp;gt; &amp;lt;target&amp;gt; &amp;lt;mode&amp;gt; &amp;lt;uid&amp;gt; &amp;lt;gid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# pipe &amp;lt;name&amp;gt; &amp;lt;mode&amp;gt; &amp;lt;uid&amp;gt; &amp;lt;gid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# sock &amp;lt;name&amp;gt; &amp;lt;mode&amp;gt; &amp;lt;uid&amp;gt; &amp;lt;gid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# Root directory
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;dir . 1755 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# common directories
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;dir proc 1775 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;dir dev 1775 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;dir bin 1775 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;dir sys 1775 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;dir run 1775 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;dir mnt 1775 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;dir etc 1775 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# symlink /sbin -&amp;gt; /bin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;slink bin /sbin 1744 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# common devices
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;dir dev/pts 1775 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;dir dev/shm 1775 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;dir dev/udev 1775 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;nod dev/zero 1666 0 0 c 1 5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;nod dev/null 1666 0 0 c 1 3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;nod dev/console 1622 0 0 c 5 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;nod dev/loop0 1644 0 0 b 7 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;nod dev/ttyS0 1666 0 0 c 4 64
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;nod dev/tty 1666 0 0 c 5 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;nod dev/ptmx 1666 0 0 c 5 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;nod dev/random 1444 0 0 c 1 8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;nod dev/urandom 1444 0 0 c 1 9
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;slink dev/core /proc/kcore 1777 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;slink dev/fd /proc/self/fd 1777 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;slink dev/stdout /proc/self/fd/1 1777 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;slink dev/stdin /proc/self/fd/0 1777 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;slink dev/stderr /proc/self/fd/2 1777 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# include previously compiled init
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;# make sure the path is /init
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;file /init init 0755 0 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-string z-unquoted z-heredoc z-shell"&gt;&lt;span class="z-keyword z-control z-heredoc-token z-shell"&gt;EOF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The line starting with &lt;code&gt;file&lt;/code&gt; takes an external file as a second parameter, and that's how we include the &lt;code&gt;init&lt;/code&gt; program in the archive.&lt;/p&gt;
&lt;p&gt;Note this is rootless, we don't need to re-create the filesystem tree locally or use fakeroot to create special file in the archive.&lt;/p&gt;
&lt;p&gt;If you're following along, you now have created &lt;code&gt;initramfs.cpio&lt;/code&gt; archive!&lt;/p&gt;
&lt;h1 id="test-with-qemu"&gt;&lt;a class="zola-anchor" href="#test-with-qemu" aria-label="Anchor link for: test-with-qemu"&gt;Test with Qemu&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;With our initramfs we just need a linux kernel to be able to run it in qemu:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;qemu-system-&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-begin z-shell"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;HOSTTYPE&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-section z-expansion z-parameter z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;kernel&lt;/span&gt; vmlinuz-6.7.5-060705-generic&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;initrd&lt;/span&gt; initramfs.cpio&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;append&lt;/span&gt; &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;console=ttyS0&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;cpu&lt;/span&gt; max&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;m&lt;/span&gt; 128M&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;nographic&lt;/span&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;serial&lt;/span&gt; mon:stdio&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;nodefaults &lt;span class="z-comment z-line z-number-sign z-shell"&gt;&lt;span class="z-punctuation z-definition z-comment z-begin z-shell"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt; Press CTRL+a CTRL+x to quit qemu&lt;/span&gt;&lt;span class="z-comment z-line z-number-sign z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can find pre-compiled kernel image in &lt;a rel="noopener" target="_blank" href="https://kernel.ubuntu.com/mainline/?C=M;O=D"&gt;ubuntu repository&lt;/a&gt;&lt;/p&gt;
&lt;iframe loading="lazy" width="656" height="443" class="center" frameborder="0" type="text&amp;#x2F;svg+xml" src="&amp;#x2F;posts&amp;#x2F;initramfs&amp;#x2F;term.svg" data-display-frame="547" &gt;&lt;/iframe&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;</content></entry><entry xml:lang="en"><title>Parallel bash function call</title><published>2022-01-15T00:00:00+00:00</published><updated>2022-01-15T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/parallel_and_bash_function/"/><id>/posts/parallel_and_bash_function/</id><content type="html" xml:base="/posts/parallel_and_bash_function/">&lt;h1 id="introduction"&gt;&lt;a class="zola-anchor" href="#introduction" aria-label="Anchor link for: introduction"&gt;Introduction&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Now that we can execute &lt;a href="/remote_bash_func_ssh"&gt;bash functions remotly&lt;/a&gt;, we can scale the execution using &lt;a rel="noopener" target="_blank" href="https://www.gnu.org/software/parallel/"&gt;GNU Parallel&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When one wants to make a change or retrieve one particular piece of information on a whole set of machines, multiple choice are available (ansible, puppet, pssh, consul, ...) each with their own upsides and downsides.&lt;/p&gt;
&lt;p&gt;Parallel + ssh + func can give a combination of upsides that I haven't seen elsewhere:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No prerequisite on remote machine&lt;/li&gt;
&lt;li&gt;Minimum requisite on local machine (bash, ssh, parallel)&lt;/li&gt;
&lt;li&gt;Blazing fast thanks to parallel&lt;/li&gt;
&lt;li&gt;Use plain bash, no new DSL or weird escaping&lt;/li&gt;
&lt;li&gt;Use shell tools that you already know&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example in fifteen seconds we're able to retrieve 1448 host kernel versions:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;$&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; kernel_version(&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;/span&gt;) &lt;span class="z-punctuation z-definition z-compound z-braces z-begin z-shell"&gt;{&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;uname&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;r&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sed&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-string z-quoted z-single z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;#39;&lt;/span&gt;s/\([0-9].[0-9]*\).*/\1/&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt; &lt;span class="z-punctuation z-definition z-compound z-braces z-end z-shell"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;$&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; time parallel_host_list_ssh_func hosts.txt kernel_version&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;j&lt;/span&gt; 250&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sort&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;uniq&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;c&lt;/span&gt;&lt;/span&gt; &lt;span class="z-keyword z-operator z-logical z-pipe z-shell"&gt;|&lt;/span&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sort&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt;&lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt; -&lt;/span&gt;n&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; 5.17&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;467&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; 5.23&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;979&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; 5.12&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;real&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; 0m15,380s&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;user&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; 0m49,900s&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;sys&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; 0m26,688s&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="where"&gt;&lt;a class="zola-anchor" href="#where" aria-label="Anchor link for: where"&gt;Where&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;You can find an helper functions here: &lt;a rel="noopener" target="_blank" href="https://github.com/izissise/shell_utils/blob/main/parallel_helpers.bash"&gt;shell_utils&lt;/a&gt;, you need to copy the functions into your &lt;code&gt;~/.bash_aliases&lt;/code&gt;.&lt;/p&gt;</content></entry><entry xml:lang="en"><title>Remote bash function with ssh</title><published>2021-03-08T00:00:00+00:00</published><updated>2021-03-08T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/remote_bash_func_ssh/"/><id>/posts/remote_bash_func_ssh/</id><content type="html" xml:base="/posts/remote_bash_func_ssh/">&lt;h1 id="genesis"&gt;&lt;a class="zola-anchor" href="#genesis" aria-label="Anchor link for: genesis"&gt;Genesis&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Often when a shell command line start to become a little long,
I like to break it down into functions.&lt;/p&gt;
&lt;p&gt;But things start to get complicated when it involve a remote host.&lt;/p&gt;
&lt;p&gt;It usually involve spawning a remote shell with ssh and then double escaping lot of characters (ssh and remote shell) in order to properly execute commands.&lt;/p&gt;
&lt;p&gt;Another solution exist though and it's usage it really simple, just write your commands in a function and pass it's name to a magic wrapper that will on remote host re-export it.&lt;/p&gt;
&lt;h1 id="how"&gt;&lt;a class="zola-anchor" href="#how" aria-label="Anchor link for: how"&gt;How&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Has show in this excellent &lt;a rel="noopener" target="_blank" href="https://www.youtube.com/watch?v=uqHjc7hlqd0"&gt;video&lt;/a&gt;, &lt;code&gt;bash&lt;/code&gt; has a &lt;code&gt;declare&lt;/code&gt; builtin that can re-export local function into string (automatically taking care of escaping).&lt;/p&gt;
&lt;p&gt;Thus one can pass these generated string to &lt;code&gt;ssh&lt;/code&gt;, so functions are re-exported on remote hosts.&lt;/p&gt;
&lt;p&gt;Also &lt;code&gt;bash&lt;/code&gt; support nested function, you can create and export namespaces this way:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt;&lt;span class="z-entity z-name z-function z-shell"&gt;namespace&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt; &lt;span class="z-punctuation z-section z-braces z-begin z-shell"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt;&lt;span class="z-meta z-function z-shell"&gt; &lt;span class="z-entity z-name z-function z-shell"&gt;func2&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt; &lt;span class="z-punctuation z-section z-braces z-begin z-shell"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt;&lt;span class="z-meta z-function z-shell"&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;ls&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt;&lt;span class="z-meta z-function z-shell"&gt; &lt;span class="z-punctuation z-section z-braces z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt;&lt;span class="z-meta z-function z-shell"&gt; &lt;span class="z-entity z-name z-function z-shell"&gt;func1&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt; &lt;span class="z-punctuation z-section z-braces z-begin z-shell"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt;&lt;span class="z-meta z-function z-shell"&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;func2&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt;&lt;span class="z-meta z-function z-shell"&gt; &lt;span class="z-punctuation z-section z-braces z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;func1&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt;&lt;span class="z-punctuation z-section z-braces z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;func&lt;/span&gt;&lt;span class="z-keyword z-operator z-assignment z-shell"&gt;=&lt;/span&gt;&lt;span class="z-string z-unquoted z-shell"&gt;&lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;namespace&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;ssh&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; host &lt;span class="z-string z-quoted z-double z-shell"&gt;&lt;span class="z-punctuation z-definition z-string z-begin z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;span class="z-meta z-group z-expansion z-command z-parens z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-storage z-modifier z-shell"&gt;declare&lt;/span&gt; &lt;span class="z-variable z-parameter z-option z-shell"&gt;&lt;span class="z-punctuation z-definition z-parameter z-shell"&gt;-&lt;/span&gt;f&lt;/span&gt; &lt;span class="z-variable z-other z-readwrite z-assignment z-shell"&gt;$func&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;/span&gt;&lt;span class="z-keyword z-operator z-logical z-continue z-shell"&gt;;&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt;&lt;/span&gt;; &lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;span class="z-punctuation z-definition z-string z-end z-shell"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="why"&gt;&lt;a class="zola-anchor" href="#why" aria-label="Anchor link for: why"&gt;Why&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;bash and ssh are ubiquitous and existed for a long time. Plus the shell will allow you to run virtually anything on the remote system.&lt;/p&gt;
&lt;h1 id="where"&gt;&lt;a class="zola-anchor" href="#where" aria-label="Anchor link for: where"&gt;Where&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;You can find an helper function here: &lt;a rel="noopener" target="_blank" href="https://github.com/izissise/shell_utils/blob/main/ssh_exec_func.bash"&gt;shell_utils&lt;/a&gt;, you need to copy the function into your &lt;code&gt;~/.bash_aliases&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It export &lt;code&gt;ssh_exec_func&lt;/code&gt;:&lt;/p&gt;
&lt;pre data-lang="bash" class="language-bash z-code"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt;&lt;span class="z-entity z-name z-function z-shell"&gt;do_stuff&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-begin z-shell"&gt;(&lt;/span&gt;&lt;span class="z-punctuation z-section z-parens z-end z-shell"&gt;)&lt;/span&gt; &lt;span class="z-punctuation z-section z-braces z-begin z-shell"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-support z-function z-echo z-shell"&gt;echo&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; &lt;span class="z-meta z-group z-expansion z-parameter z-shell"&gt;&lt;span class="z-punctuation z-definition z-variable z-shell"&gt;$&lt;/span&gt;&lt;span class="z-variable z-other z-readwrite z-shell"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt; &lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;hostname&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function z-shell"&gt;&lt;span class="z-punctuation z-section z-braces z-end z-shell"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-shell z-bash"&gt;&lt;span class="z-meta z-function-call z-shell"&gt;&lt;span class="z-variable z-function z-shell"&gt;ssh_exec_func&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; host&lt;span class="z-keyword z-operator z-end-of-options z-shell"&gt; --&lt;/span&gt;&lt;/span&gt;&lt;span class="z-meta z-function-call z-arguments z-shell"&gt; do_stuff hello&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="more"&gt;&lt;a class="zola-anchor" href="#more" aria-label="Anchor link for: more"&gt;More&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Stay tuned for a post that'll push this concept further.&lt;/p&gt;</content></entry><entry xml:lang="en"><title>Network manager connection action</title><published>2021-03-06T00:00:00+00:00</published><updated>2021-03-06T00:00:00+00:00</updated><author><name>
Unknown</name></author><link rel="alternate" type="text/html" href="/posts/network-manager-connection-action/"/><id>/posts/network-manager-connection-action/</id><content type="html" xml:base="/posts/network-manager-connection-action/">&lt;h2 id="genesis"&gt;&lt;a class="zola-anchor" href="#genesis" aria-label="Anchor link for: genesis"&gt;Genesis&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It as always been kind of a hassle to do actions upon connecting to a network using network manager, especially if you want your script to run a with user permissions.&lt;/p&gt;
&lt;p&gt;Maybe you work for multiple companies and you want to setup and run some program when connecting to their VPN.&lt;/p&gt;
&lt;p&gt;You could setup an up rule on your openvpn configuration but it would run as root, and only works for openvpn.&lt;/p&gt;
&lt;p&gt;Why if instead you could have a program that watches network-manager events and run pre-specified commands?&lt;/p&gt;
&lt;p&gt;Look no more and go check-out &lt;a rel="noopener" target="_blank" href="https://github.com/izissise/network-manager-connection-action"&gt;network-manager-connection-action&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="how"&gt;&lt;a class="zola-anchor" href="#how" aria-label="Anchor link for: how"&gt;How&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This program is written in Rust and uses Tokio projects to connect to dbus and listen for event from network-manager, if an event come from a connection for which the UUID exist in config file, it runs the associated command.&lt;/p&gt;
&lt;h2 id="ssh-canonicalization-usage"&gt;&lt;a class="zola-anchor" href="#ssh-canonicalization-usage" aria-label="Anchor link for: ssh-canonicalization-usage"&gt;SSH canonicalization usage&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I personally been using this program to automatically setup &lt;a rel="noopener" target="_blank" href="https://dotfiles.tnetconsulting.net/articles/2016/0109/ssh-canonicalization.html"&gt;ssh canonicalization&lt;/a&gt; on the company search domains when connecting to the VPN.&lt;/p&gt;
&lt;p&gt;With the following ssh configuration at the top:&lt;/p&gt;
&lt;pre data-lang="config" class="language-config z-code"&gt;&lt;code class="language-config" data-lang="config"&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-comment z-genconfig"&gt;&lt;span class="z-comment z-line z-number-sign z-genconfig"&gt;##################
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-comment z-genconfig"&gt;&lt;span class="z-comment z-line z-number-sign z-genconfig"&gt;#Canonicalization#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-comment z-genconfig"&gt;&lt;span class="z-comment z-line z-number-sign z-genconfig"&gt;##################
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-comment z-genconfig"&gt;&lt;span class="z-comment z-line z-number-sign z-genconfig"&gt;# Don&amp;#39;t canonicalize host with dots (assume there are already full hostname)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt;&lt;span class="z-variable z-parameter z-genconfig"&gt;CanonicalizeMaxDots&lt;/span&gt; &lt;/span&gt;&lt;span class="z-constant z-numeric z-genconfig"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-comment z-genconfig"&gt;&lt;span class="z-comment z-line z-number-sign z-genconfig"&gt;# Fallback to local name Resolution in any case
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt;&lt;span class="z-variable z-parameter z-genconfig"&gt;CanonicalizeFallbackLocal&lt;/span&gt; &lt;/span&gt;&lt;span class="z-constant z-language z-genconfig"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt;&lt;span class="z-variable z-parameter z-genconfig"&gt;CanonicalizeHostname&lt;/span&gt; &lt;/span&gt;&lt;span class="z-constant z-language z-genconfig"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-comment z-genconfig"&gt;&lt;span class="z-comment z-line z-number-sign z-genconfig"&gt;# Include static list
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt;&lt;span class="z-variable z-parameter z-genconfig"&gt;Include&lt;/span&gt; &lt;/span&gt;static_canonical_domains&lt;span class="z-keyword z-operator z-genconfig"&gt;.&lt;/span&gt;conf
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;
&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-comment z-genconfig"&gt;&lt;span class="z-comment z-line z-number-sign z-genconfig"&gt;# Include script generated list of CanonicalDomains
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt;&lt;span class="z-variable z-parameter z-genconfig"&gt;Include&lt;/span&gt; &lt;/span&gt;&lt;span class="z-support z-type z-genconfig"&gt;tmp/canonical_domains.conf&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;tmp/canonical_domains.conf&lt;/code&gt; is generated using &lt;a rel="noopener" target="_blank" href="https://github.com/izissise/network-manager-connection-action/blob/master/example/ssh_canonicalization_gen.sh"&gt;ssh_canonicalization_gen.sh&lt;/a&gt; when connecting to the company VPN.&lt;/p&gt;
&lt;p&gt;It will transform the file into this:&lt;/p&gt;
&lt;pre data-lang="config" class="language-config z-code"&gt;&lt;code class="language-config" data-lang="config"&gt;&lt;span class="z-source z-genconfig"&gt;&lt;span class="z-meta z-param z-genconfig"&gt;&lt;span class="z-variable z-parameter z-genconfig"&gt;CanonicalDomains&lt;/span&gt; &lt;/span&gt;internal&lt;span class="z-keyword z-operator z-genconfig"&gt;.&lt;/span&gt;company&lt;span class="z-keyword z-operator z-genconfig"&gt;.&lt;/span&gt;com historic&lt;span class="z-keyword z-operator z-genconfig"&gt;.&lt;/span&gt;company&lt;span class="z-keyword z-operator z-genconfig"&gt;.&lt;/span&gt;com
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This usage can be found in repository's example directory&lt;/p&gt;</content></entry></feed>